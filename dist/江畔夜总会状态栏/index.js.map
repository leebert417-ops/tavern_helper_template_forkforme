{"version":3,"file":"index.js","mappings":"AACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,sBCIlFI,QAAQC,IAAI,sBAo+BZ,IAAIC,EAMO,KACPC,EAMO,KACPC,EAAqB,KAGzB,IAAIC,EAAe,EAEnB,IAAIC,EAA2E,OAC3EC,EAAwC,IAAIC,IAGhD,SAASC,EAAQC,EAAWC,EAAcC,EAAuB,MAC/D,IAAKF,EAAM,OAAOE,EAClB,MAAMC,EAAOF,EAAKG,MAAM,KACxB,IAAIC,EAAUL,EACd,IAAK,MAAMrB,KAAOwB,EAAM,CACtB,GAAIE,SAAgE,iBAAZA,EACtD,OAAOH,EAETG,EAAUA,EAAQ1B,EACpB,CACA,OAAI0B,SACuB,KAApBC,OAAOD,GADwCH,EACPI,OAAOD,EACxD,CAGA,SAASE,IAIP,IAAIC,EAHJlB,QAAQC,IAAI,uBAIZ,IACEiB,EAAYC,OAAOC,IAAMD,OAAOC,IAAIC,SAAWA,QACjD,CAAE,MAAOC,GACPtB,QAAQuB,KAAK,oCACbL,EAAYG,QACd,CAGIH,EAAUM,eAAe,0BAC3BxB,QAAQC,IAAI,wBACZiB,EAAUM,eAAe,yBAAyBC,SAClDP,EAAUM,eAAe,yBAAyBC,SAClDP,EAAUM,eAAe,4BAA4BC,SAErDC,EAAER,GAAWS,IAAI,qBACjBD,EAAER,GAAWS,IAAI,oBACjBD,EAAEP,QAAQQ,IAAI,qBAIXT,EAAUM,eAAe,6BAC5BN,EAAUU,KAAKC,mBAAmB,YAj+BvB,o3jBAk+BX7B,QAAQC,IAAI,YAIdiB,EAAUY,KAAKD,mBAAmB,YAlHvB,49CAmHX7B,QAAQC,IAAI,cAGZ,MAAM8B,EAAMb,EAAUM,eAAe,wBACrC,GAAIO,EACF,IACE,MAAMC,EAAQC,aAAaC,QAAQ,0BACnC,GAAIF,EAAO,CACT,MAAMG,EAAMC,KAAKC,MAAML,GACvBD,EAAIO,MAAMC,KAAOJ,EAAII,KAAO,KAC5BR,EAAIO,MAAMlB,IAAMe,EAAIf,IAAM,KAC1BpB,QAAQC,IAAI,aAAckC,EAC5B,CACF,CAAE,MAAOb,GACPtB,QAAQuB,KAAK,cACf,EAaJ,SAA8BL,GAC5B,MAAMa,EAAMb,EAAUM,eAAe,wBAC/BgB,EAAQtB,EAAUM,eAAe,wBACvC,IAAKO,IAAQS,EAAO,OAEpB,MAAMC,EAAaf,EAAER,GAGrB,SAASwB,EAAmBC,EAAiBC,GAC3C,GAAI1C,EAAa,OAAO,EAExB,MAAM2C,EAAgB1B,OAAO2B,iBAAiBf,GACxCgB,EAAcC,SAASH,EAAcN,OAAS,EAC9CU,EAAaD,SAASH,EAAczB,MAAQ,EAWlD,OATAlB,EAAc,CACZgD,OAAQP,EACRQ,OAAQP,EACRQ,YAAaL,EACbM,WAAYJ,EACZK,YAAY,GAGdtD,QAAQC,IAAI,eACL,CACT,CAGA,SAASsD,EAAkBZ,EAAiBC,GAC1C,IAAK1C,EAAa,OAElB,MAAMsD,EAASb,EAAUzC,EAAYgD,OAC/BO,EAASb,EAAU1C,EAAYiD,OAUrC,IAPKjD,EAAYoD,aAAeI,KAAKC,IAAIH,GAnHtB,GAmHkDE,KAAKC,IAAIF,GAnH3D,KAoHjBvD,EAAYoD,YAAa,EACzBvB,EAAI6B,UAAUC,IAAI,YAClB7D,QAAQC,IAAI,eAIVC,EAAYoD,WAAY,CAC1B,IAIIQ,EAJAC,EAAU7D,EAAYkD,YAAcI,EACpCQ,EAAS9D,EAAYmD,WAAaI,EAItC,IACEK,EAAe3C,OAAOC,KAAOD,MAC/B,CAAE,MAAOG,GACPwC,EAAe3C,MACjB,CACA,MAAM8C,EAAOvC,EAAEoC,GAAcI,QAAW,GAClCC,EAAOzC,EAAEoC,GAAcM,SAAY,GAEzCL,EAAUL,KAAKW,IAAI,EAAGX,KAAKY,IAAIP,EAASE,IACxCD,EAASN,KAAKW,IAAI,EAAGX,KAAKY,IAAIN,EAAQG,IAEtCpC,EAAIO,MAAMC,KAAOwB,EAAU,KAC3BhC,EAAIO,MAAMlB,IAAM4C,EAAS,IAC3B,CACF,CAGA,SAASO,EAAiB5B,EAAiBC,GACzC,IAAK1C,EAAa,OAElB,MAAMsE,EAAatE,EAAYoD,WAK/B,GAHAvB,EAAI6B,UAAUnC,OAAO,YAGjB+C,EAAY,CACd,MAAM3B,EAAgB1B,OAAO2B,iBAAiBf,GAIxC0C,EAAW,CACflC,KAJkBS,SAASH,EAAcN,OAAS,EAKlDnB,IAJiB4B,SAASH,EAAczB,MAAQ,GAOlDa,aAAayC,QAAQ,yBAA0BtC,KAAKuC,UAAUF,IAC9DzE,QAAQC,IAAI,iBAAkBwE,EAChC,CAEAvE,EAAc,KAGTsE,IACHxE,QAAQC,IAAI,iBA6SlB,SAAqBiB,GACnB,MAAMsB,EAAQtB,EAAUM,eAAe,wBACvC,IAAKgB,EAAO,OAEZ,MAAMoC,EAAWpC,EAAMoB,UAAUiB,SAAS,UAEtCD,EACFpC,EAAMoB,UAAUnC,OAAO,WAEvBe,EAAMoB,UAAUC,IAAI,UAEpBxD,EAAe,EACfyE,EAAkB5D,GAEtB,CA1TM6D,CAAY7D,GAEhB,CAGAQ,EAAEK,GAAKiD,GAAG,6BAA8B,SAAU1D,GAC5CoB,EAAmBpB,EAAEqB,QAASrB,EAAEsB,WAClCtB,EAAE2D,iBACF3D,EAAE4D,kBAEN,GAGAnD,EAAIoD,iBACF,aACA,SAAU7D,GACR,MAAM8D,EAAQ9D,EAAE+D,QAAQ,GACpB3C,EAAmB0C,EAAMzC,QAASyC,EAAMxC,WAC1CtB,EAAE2D,iBACF3D,EAAE4D,kBAEN,EACA,CAAEI,SAAS,IAGb7C,EAAWuC,GAAG,6BAA8B,SAAU1D,GACpDiC,EAAkBjC,EAAEqB,QAASrB,EAAEsB,SAC3B1C,GAAaoB,EAAE2D,gBACrB,GAEAxC,EAAWuC,GAAG,6BAA8B,SAAU1D,GACpD,MAAM8D,EAAQ9D,EAAEiE,cAAeF,QAAQ,GACvC9B,EAAkB6B,EAAMzC,QAASyC,EAAMxC,SACnC1C,GAAaoB,EAAE2D,gBACrB,GAEAxC,EAAWuC,GAAG,2BAA4B,SAAU1D,GAClDiD,EAAiBjD,EAAEqB,QAASrB,EAAEsB,QAChC,GAEAH,EAAWuC,GAAG,yDAA0D,SAAU1D,GAChF,MAAM8D,EAAQ9D,EAAEiE,cAAeC,eAAe,GAC1CJ,EACFb,EAAiBa,EAAMzC,QAASyC,EAAMxC,SAEtC2B,EAAiB,EAAG,EAExB,GAEAvE,QAAQC,IAAI,eACd,CAvJEwF,CAAqBvE,GA0JvB,SAA+BA,GAC7B,MAAMwE,EAAWxE,EAAUM,eAAe,uBACtCkE,GACFA,EAASP,iBAAiB,QAAS7D,IACjCA,EAAE4D,kBACF,MAAM1C,EAAQtB,EAAUM,eAAe,wBACnCgB,GACFA,EAAMoB,UAAUnC,OAAO,aAe/B,SAAgCP,GAC9B,MAAMyE,EAAOzE,EAAU0E,iBAAiB,kBAExCD,EAAKE,QAAQC,IACXA,EAAIX,iBAAiB,QAAS,SAAU7D,GACtCA,EAAE4D,kBAEF,MAAMa,EAAQC,KAAqBC,aAAa,aAM3CF,IAGLzF,EAAcyF,EAGdJ,EAAKE,QAAQK,GAAKA,EAAEtC,UAAUnC,OAAO,WACrCuE,KAAKpC,UAAUC,IAAI,UAGfzD,GACF+F,EAAoBjF,EAAWd,GAGjCJ,QAAQC,IAAI,YAAa8F,GAC3B,KAGF/F,QAAQC,IAAI,cACd,EAzCEmG,CAAuBlF,GA4CzB,SAA6BA,GAC3B,MAAMsB,EAAQtB,EAAUM,eAAe,wBACjC6E,EAASnF,EAAUM,eAAe,wBAAwB8E,cAEhE,IAAK9D,IAAU6D,EAAQ,OAEvB,MAAM5D,EAAaf,EAAER,GACJ,iEAAiEqF,KAAKC,UAAUC,WAGjG,SAASC,IACP,IACE,MAAM1E,EAAQC,aAAaC,QAAQ,4BACnC,GAAIF,EAAO,CACT,MAAMG,EAAMC,KAAKC,MAAML,GAEEb,OAAOwF,YAAc,KAAOxF,OAAOwF,WAAaxF,OAAOyF,cAG9EpE,EAAMF,MAAMuE,UAAY,OACxBrE,EAAMF,MAAMC,KAAOJ,EAAII,KAAO,KAC9BC,EAAMF,MAAMlB,IAAMe,EAAIf,IAAM,KAC5BpB,QAAQC,IAAI,aAAckC,GAE9B,CACF,CAAE,MAAOb,GACPtB,QAAQuB,KAAK,cACf,CACF,CAGA,SAASuF,EAAqBnE,EAAiBC,GAC7C,GAAIzC,EAAe,OAAO,EAI1B,GADyBgB,OAAOwF,YAAc,KAAOxF,OAAOwF,WAAaxF,OAAOyF,YAC1D,OAAO,EAE7B,MAAMG,EAAOvE,EAAMwE,wBAWnB,OATA7G,EAAgB,CACd+C,OAAQP,EACRQ,OAAQP,EACRQ,YAAa2D,EAAKxE,KAClBc,WAAY0D,EAAK3F,IACjBkC,YAAY,GAGdtD,QAAQC,IAAI,eACL,CACT,CAGA,SAASgH,EAAoBtE,EAAiBC,GAC5C,IAAKzC,EAAe,OAEpB,MAAMqD,EAASb,EAAUxC,EAAc+C,OACjCO,EAASb,EAAUzC,EAAcgD,OAWvC,IARKhD,EAAcmD,aAAeI,KAAKC,IAAIH,GAtVxB,GAsVoDE,KAAKC,IAAIF,GAtV7D,KAuVjBtD,EAAcmD,YAAa,EAC3Bd,EAAMoB,UAAUC,IAAI,YACpBwC,EAAOzC,UAAUC,IAAI,YACrB7D,QAAQC,IAAI,eAIVE,EAAcmD,WAAY,CAC5B,IAAIS,EAAU5D,EAAciD,YAAcI,EACtCQ,EAAS7D,EAAckD,WAAaI,EAGxC,MAAMyD,EAAa1E,EAAM2E,YACL3E,EAAM4E,aAG1B,IAAItD,EACJ,IACEA,EAAe3C,OAAOC,KAAOD,MAC/B,CAAE,MAAOG,GACPwC,EAAe3C,MACjB,CACA,MAAMkG,EAAgB3F,EAAEoC,GAAcI,QAChCoD,EAAiB5F,EAAEoC,GAAcM,SAEvCL,EAAUL,KAAKW,IAAkB,GAAb6C,EAAiBxD,KAAKY,IAAIP,EAASsD,EAAgB,KACvErD,EAASN,KAAKW,IAAI,EAAGX,KAAKY,IAAIN,EAAQsD,EAAiB,KAGvD9E,EAAMF,MAAMuE,UAAY,OACxBrE,EAAMF,MAAMC,KAAOwB,EAAU,KAC7BvB,EAAMF,MAAMlB,IAAM4C,EAAS,IAC7B,CACF,CAGA,SAASuD,IACP,IAAKpH,EAAe,OAEpB,MAAMqE,EAAarE,EAAcmD,WAMjC,GAJAd,EAAMoB,UAAUnC,OAAO,YACvB4E,EAAOzC,UAAUnC,OAAO,YAGpB+C,EAAY,CACd,MAAMuC,EAAOvE,EAAMwE,wBACbvC,EAAW,CACflC,KAAMwE,EAAKxE,KACXnB,IAAK2F,EAAK3F,KAGZa,aAAayC,QAAQ,2BAA4BtC,KAAKuC,UAAUF,IAChEzE,QAAQC,IAAI,iBAAkBwE,EAChC,CAEAtE,EAAgB,IAClB,CAGAuB,EAAE2E,GAAQrB,GAAG,4BAA6B,SAAU1D,GAE7CA,EAAEkG,OAAuBC,QAAQ,yBAIlCX,EAAqBxF,EAAEqB,QAASrB,EAAEsB,WACpCtB,EAAE2D,iBACF3D,EAAE4D,kBAEN,GAGAmB,EAAOlB,iBACL,aACA,SAAU7D,GAER,GAAKA,EAAEkG,OAAuBC,QAAQ,wBACpC,OAGF,MAAMrC,EAAQ9D,EAAE+D,QAAQ,GACpByB,EAAqB1B,EAAMzC,QAASyC,EAAMxC,WAC5CtB,EAAE2D,iBACF3D,EAAE4D,kBAEN,EACA,CAAEI,SAAS,IAGb7C,EAAWuC,GAAG,4BAA6B,SAAU1D,GACnD2F,EAAoB3F,EAAEqB,QAASrB,EAAEsB,SAC7BzC,GAAemB,EAAE2D,gBACvB,GAEAxC,EAAWuC,GAAG,4BAA6B,SAAU1D,GACnD,MAAM8D,EAAQ9D,EAAEiE,cAAeF,QAAQ,GACvC4B,EAAoB7B,EAAMzC,QAASyC,EAAMxC,SACrCzC,GAAemB,EAAE2D,gBACvB,GAEAxC,EAAWuC,GAAG,0BAA2B,WACvCuC,GACF,GAEA9E,EAAWuC,GAAG,uDAAwD,WACpEuC,GACF,GAGA7F,EAAEP,QAAQ6D,GAAG,2DAA4D,WAC9C7D,OAAOwF,YAAc,KAAOxF,OAAOwF,WAAaxF,OAAOyF,aAG9EpE,EAAMF,MAAMuE,UAAY,OACxBrE,EAAMF,MAAMC,KAAO,IACnBC,EAAMF,MAAMlB,IAAM,KAGlBsF,GAEJ,GAGAA,IAEA1G,QAAQC,IAAI,eACd,CArOEyH,CAAoBxG,GAEpBlB,QAAQC,IAAI,aACd,CA1KE0H,CAAsBzG,GAEtBlB,QAAQC,IAAI,qBACd,CA4ZA2H,eAAe9C,EAAkB5D,GAC/B,IAEE,GAAmB,oBAAR2G,IAET,IACE,IAAI1G,OAAO2G,aAAgD,IAA9B3G,OAAO2G,OAAeD,IAIjD,MAAM,IAAIE,MAAM,eAHf5G,OAAe0G,IAAO1G,OAAO2G,OAAeD,IAC7C7H,QAAQC,IAAI,gBAIhB,CAAE,MAAOqB,GASP,OARAtB,QAAQuB,KAAK,6BACTlB,EA1fQ,GA2fVA,IACAL,QAAQC,IAAI,QAAQI,oBACpB2H,WAAW,IAAMlD,EAAkB5D,GA5fzB,MA8fV+G,EAAU/G,EAAW,kCAGzB,CAIF,MAAMgH,EAAYL,IAAIM,WAAW,CAC/BC,KAAM,UACNC,WAAY,WAGR3H,EAAOwH,GAAWI,UAExB,IAAK5H,EAQH,OAPAV,QAAQuB,KAAK,oBACTlB,EA/gBU,GAghBZA,IACA2H,WAAW,IAAMlD,EAAkB5D,GAhhBvB,MAkhBZ+G,EAAU/G,EAAW,WAKzBd,EAAgBM,EAChBV,QAAQC,IAAI,WAAYS,GAGxByF,EAAoBjF,EAAWR,EACjC,CAAE,MAAO6H,GACPvI,QAAQuI,MAAM,YAAaA,GAC3BN,EAAU/G,EAAW,SAAYqH,EAAgBC,QACnD,CACF,CAEA,SAASP,EAAU/G,EAAqBsH,GACtC,MAAMC,EAAavH,EAAUM,eAAe,qBACxCiH,IACFA,EAAWC,UAAY,wIAGiBF,8BAI5C,CAGA,SAASrC,EAAoBjF,EAAqBR,GAChD,MAAM+H,EAAavH,EAAUM,eAAe,qBACtCmH,EAAczH,EAAUM,eAAe,0BAE7C,IAAKiH,EAAY,OAGjB,GAAIE,GAAejI,EAAK,KAAM,CAC5B,MAAMkI,EAAWnI,EAAQC,EAAM,YAAa,IACtCmI,EAAWpI,EAAQC,EAAM,YAAa,IACtCoI,EAAarI,EAAQC,EAAM,YAAa,IACxCqI,EAAetI,EAAQC,EAAM,YAAa,IAChDiI,EAAYK,YAAc,GAAGJ,KAAYC,OAAcC,IAAaC,EAAe,MAAMA,IAAiB,IAC5G,CAGA,MAAME,EAAcvI,EAAK,OAAO,OAAOwI,QAAU,EAC3CC,EAAgBzI,EAAK,QAAQ,MAAMwI,QAAU,EAC7CE,EAAgB1I,EAAK,KAAK,MAAMwI,QAAU,EAC1CG,EAAiB3I,EAAK,KAAOnB,OAAOsB,KAAKH,EAAK,MAAMwI,OAAS,EAE7DI,EAAgBpI,EAAUM,eAAe,sBACzC+H,EAAgBrI,EAAUM,eAAe,sBACzCgI,EAAgBtI,EAAUM,eAAe,sBACzCiI,EAAiBvI,EAAUM,eAAe,uBAE5C8H,IAAeA,EAAcN,YAAchI,OAAOiI,IAClDM,IAAeA,EAAcP,YAAchI,OAAOmI,IAClDK,IAAeA,EAAcR,YAAchI,OAAOoI,IAClDK,IAAgBA,EAAeT,YAAchI,OAAOqI,IAGxD,IAAIK,EAAO,GAGS,SAAhBpJ,EAEFoJ,GAwBJ,SAAwBhJ,GACtB,IAAIgJ,EAAO,GAGPhJ,EAAK,QACPgJ,GAAQ,mWASqCjJ,EAAQC,EAAM,eAAgB,uEAmC7E,OA3BAgJ,GAAQ,g6BA2BDA,CACT,CA1EYC,CAAejJ,GACE,aAAhBJ,EAEToJ,GA0EJ,SAA4BhJ,GAC1B,IAAIgJ,EAAO,GA+BX,GA5BAA,GAAQ,+1BAqBqChJ,EAAK,QAAQ,QAAU,2DAOhEA,EAAK,OAAO,OAASA,EAAK,MAAM,MAAMwI,OAAS,EAAG,CACpD,MAAMU,EAASlJ,EAAK,MAAM,MAC1BgJ,GAAQ,sIAIYE,EAAOV,qFAK3BU,EAAO/D,QAAQgE,IACb,MAAMC,EAAWD,EAAM,MAAQ,KACzBE,EAASF,EAAM,MAAQ,KACvBzB,EAAOyB,EAAM,MAAQ,GACrBG,EAAeH,EAAM,MAAQ,GAC7BI,EAAWJ,EAAM,MAAQ,GACzBK,EAASL,EAAM,IAAM,MAE3BH,GAAQ,sJAGqCI,gEACEI,oLAIJH,yCAGrC3B,EACI,4JAGiCA,6BAEjC,iBAGJ4B,EACI,4JAGiCA,6BAEjC,iBAGJC,EACI,4JAGiCA,6BAEjC,+BAMZP,GAAQ,sCAIV,MACEA,GAAQ,yKAQV,OAAOA,CACT,CApLYS,CAAmBzJ,GACF,aAAhBJ,EAEToJ,GAoLJ,SAA4BhJ,GAC1B,IAAIgJ,EAAO,GAEX,GAAIhJ,EAAK,OAAQ,CACf,MAAM0J,EAAW1J,EAAK,OAAO,MAAQ,GAEb,IAApB0J,EAASlB,OACXQ,GAAQ,2LAORA,GAAQ,gJAIcU,EAASlB,2FAK/BkB,EAASvE,QAAQwE,IACf,MAAMC,EAAOD,EAAQ,IAAM,KACrBE,EAAOF,EAAQ,IAAM,GACrBG,EAAMH,EAAQ,MAAM,IAAM,GAC1BI,EAASJ,EAAQ,MAAM,IAAM,GAC7BK,EAAaL,EAAQ,MAAM,MAAQ,GACnCM,EAAON,EAAQ,MAAM,MAAQ,IAC7BO,EAAmC,iBAAjBP,EAAQ,KAAoBA,EAAQ,KAAOA,EAAQ,MAAQ,IAC7ER,EAAQQ,EAAQ,MAAM,MAAQ,IAC9B7C,EAAS6C,EAAQ,MAAM,MAAQ,KAC/BL,EAAeK,EAAQ,MAAM,MAAQ,GACrCH,EAASG,EAAQ,MAAQ,MAE/BX,GAAQ,4JAGqCY,IAAOC,EAAO,KAAKA,KAAU,mEAC3BL,iMAIJM,QAAUC,6CAG/CC,EACI,kKAGiCA,+BAEjC,oKAIiCC,gMAIAC,qJAGgBA,gMAIhBf,8LAIArC,6CAGrCwC,EACI,kKAGiCA,+BAEjC,mCAMZN,GAAQ,uCAKZ,CAEA,OAAOA,CACT,CAnRYmB,CAAmBnK,GACF,aAAhBJ,EAEToJ,GAmRJ,SAA4BhJ,GAC1B,IAAIgJ,EAAO,GAEX,GAAIhJ,EAAK,IAAK,CACZ,MAAMoK,EAAWpK,EAAK,IAAI,MAAQ,GAEV,IAApBoK,EAAS5B,OACXQ,GAAQ,2LAORA,GAAQ,6IAIWoB,EAAS5B,2FAK5B4B,EAASjF,QAAQkF,IACf,MAAMR,EAAOQ,EAAO,IAAM,GACpBT,EAAOS,EAAO,IAAM,KACpB3C,EAAO2C,EAAO,IAAM,KACpBP,EAAMO,EAAO,IAAM,GACnBN,EAASM,EAAO,IAAM,GACtBC,EAAWD,EAAO,IAAM,GACxBE,EAAgBF,EAAO,MAAQ,GAC/BG,EAAaH,EAAO,IAAM,GAEhCrB,GAAQ,4JAGqCY,IAAOC,EAAO,KAAKA,KAAU,mEAC3BnC,iMAIJoC,EAAMA,EAAM,IAAM,MAAMA,GAAOC,EAAS,IAAM,MAAMA,6CAGzFO,EACI,gKAGiCA,+BAEjC,mBAGJC,EACI,kKAGiCA,+BAEjC,mBAGJC,EACI,gKAGiCA,+BAEjC,mCAMZxB,GAAQ,iDAKZ,CAEA,OAAOA,CACT,CArWYyB,CAAmBzK,GACF,cAAhBJ,IAEToJ,GAqWJ,SAA6BhJ,GAC3B,IAAIgJ,EAAO,GAGX,MAAM0B,EAAgB1K,EAAK,MAAQ,CAAC,EAC9B2I,EAAiB9J,OAAOsB,KAAKuK,GAAelC,OAG5CmC,EAAuBC,GACpBA,EAAKC,QAAQ,OAAQ,QAAQA,QAAQ,MAAO,QAI/CC,EAA4E,GAG9E9K,EAAK,QAAQ,MACfA,EAAK,OAAO,KAAKmF,QAAQwE,IACnBA,EAAQ,IACVmB,EAAiBC,KAAK,CACpBnB,KAAMD,EAAQ,GACdqB,SAAU,OACVC,KAAM,OAAOtB,EAAQ,IAAM,gBAAgBA,EAAQ,MAAQ,WAO/D3J,EAAK,KAAK,MACZA,EAAK,IAAI,KAAKmF,QAAQkF,IAChBA,EAAO,IACTS,EAAiBC,KAAK,CACpBnB,KAAMS,EAAO,GACbW,SAAU,MACVC,KAAM,OAAOZ,EAAO,IAAM,cAAcA,EAAO,MAAQ,WAuH/D,OAhHAS,EAAiBC,KACf,CAAEnB,KAAM,KAAMoB,SAAU,MAAOC,KAAM,mBACrC,CAAErB,KAAM,KAAMoB,SAAU,MAAOC,KAAM,oBAGvCjC,GAAQ,iYAUmDL,+FAI5B,IAAnBA,EACI,oDACA9J,OAAOqM,QAAQR,GACZS,IAAI,EAAEvB,EAAMwB,KAGJ,qFAFaxB,EAAKiB,QAAQ,KAAM,2IAKGjB,6PAJpBe,EAAoBS,gGAa3CC,KAAK,sPAQqCxL,EAAyByL,+BAE1EzL,EAAyByL,KAAO,EAC5B,2EACA,wFAK8B,IAAlCzL,EAAyByL,KACrB,gEACAC,MAAMC,KAAK3L,GACRsL,IAAIM,IACH,MAAM3E,EAASgE,EAAiBY,KAAKlG,GAAKA,EAAEoE,OAAS6B,GACrD,OAAK3E,EACE,0MAGyCA,EAAO8C,wFACH9C,EAAOkE,gHACalE,EAAO8C,sHAElC9C,EAAOmE,iCARhC,KAYrBI,KAAK,uPAYxBP,EAAiB3F,QAAQ2B,IACvB,MAAM6E,EAAa9L,EAAyB+L,IAAI9E,EAAO8C,MACvDZ,GAAQ,6CAC8B2C,EAAa,WAAa,yBAAyB7E,EAAO8C,wGAEpD9C,EAAO8C,kEACH9C,EAAOkE,+EAEdlE,EAAOmE,4DACLU,EAAa,QAAU,qCAKpE3C,GAAQ,gJAIkG,IAAlCnJ,EAAyByL,KAAa,WAAa,gJAGK,IAAlCzL,EAAyByL,KAAa,WAAa,iGAQ1ItC,CACT,CAhgBY6C,CAAoB7L,IAG9B+H,EAAWC,UAAYgB,EAGH,cAAhBpJ,GA6fN,SAAmCY,GACjClB,QAAQC,IAAI,uBAAwBM,GAGpC,MAAMiM,EAActL,EAAU0E,iBAAiB,0BAC/C4G,EAAY3G,QAAQ4G,IAClBA,EAAKtH,iBAAiB,QAAS,SAAU7D,GACvCA,EAAE4D,kBACF,MAAMwH,EAAe1G,KAAqB2G,cAAc,0BACpDD,GACFA,EAAY9I,UAAUgJ,OAAO,WAEjC,KAIF,MAAMC,EAAc3L,EAAU0E,iBAAiB,0BAC/C5F,QAAQC,IAAI,eAAgB4M,EAAY3D,QACxC2D,EAAYhH,QAAQ4G,IAClBA,EAAKtH,iBAAiB,QAAS,SAAU7D,GACvCA,EAAE4D,kBACF,MAAMiH,EAAcnG,KAAqBC,aAAa,oBAEtD,GADAjG,QAAQC,IAAI,YAAakM,GACpBA,EAAL,CAEA,GAAI5L,EAAyB+L,IAAIH,GAC/B5L,EAAyBuM,OAAOX,GAChCnM,QAAQC,IAAI,UAAWkM,OAClB,CACL,GAAI5L,EAAyByL,MAAQ,EAEnC,YADAe,MAAM,kBAGRxM,EAAyBsD,IAAIsI,GAC7BnM,QAAQC,IAAI,UAAWkM,EACzB,CAEAnM,QAAQC,IAAI,eAAgBM,GAExBH,GACF+F,EAAoBjF,EAAWd,EAjBV,CAmBzB,KAIF,MAAM4M,EAAc9L,EAAUM,eAAe,uBACzCwL,GACFA,EAAY7H,iBAAiB,QAAS7D,IACpCA,EAAE4D,kBACFlF,QAAQC,IAAI,cACZM,EAAyB0M,QACrB7M,GACF+F,EAAoBjF,EAAWd,KAMrC,MAAM8M,EAAgBhM,EAAU0E,iBAAiB,kCACjDsH,EAAcrH,QAAQ9D,IACpBA,EAAIoD,iBAAiB,QAAS,SAAU7D,GACtCA,EAAE4D,kBACF,MAAMiH,EAAcnG,KAAqBC,aAAa,sBACtDjG,QAAQC,IAAI,YAAakM,GACrBA,GAAc5L,EAAyB+L,IAAIH,KAC7C5L,EAAyBuM,OAAOX,GAC5B/L,GACF+F,EAAoBjF,EAAWd,GAGrC,KAIF,MAAM+M,EAAWjM,EAAUM,eAAe,uBACtC2L,GACFA,EAAShI,iBAAiB,QAAS,KACjC,GAAsC,IAAlC5E,EAAyByL,KAAY,OAEzC,MAAMoB,EAAUnB,MAAMC,KAAK3L,GAC3B,IAAI8M,EAAU,8CAEdD,EAAQvH,QAAQ,CAAC2B,EAAQ8F,KACvBD,GAAW,IAAI7F,KACX8F,EAAQF,EAAQlE,OAAS,IAC3BmE,GAAW,OAIfA,GAAW,yFAEXD,EAAQvH,QAAQ,CAAC2B,EAAQ8F,KACvBD,GAAW,eAAe7F,qGACtB8F,EAAQF,EAAQlE,OAAS,IAC3BmE,GAAW,QAIfE,EAAYF,KAKhB,MAAMG,EAAYtM,EAAUM,eAAe,wBACvCgM,GACFA,EAAUrI,iBAAiB,QAAS,KAClC,GAAsC,IAAlC5E,EAAyByL,KAAY,OAEzC,MAAMoB,EAAUnB,MAAMC,KAAK3L,GAC3B,IAAI8M,EAAU,mBAEdD,EAAQvH,QAAQ2B,IACd6F,GAAW,qBAAqB7F,UAGlC+F,EAAYF,GAGZ9M,EAAyB0M,QACrB7M,GACF+F,EAAoBjF,EAAWd,IAIvC,CAznBIqN,CAA0BvM,EAE9B,CA0nBA,SAASqM,EAAYF,GACnB,IACE,MAAMK,GAAa5F,OAAOzG,UAAYA,UAAUsL,cAAc,kBAC9D,IAAIe,EASF,MAAM,IAAI3F,MAAM,UARe,KAA3B2F,EAAUC,MAAMC,OAClBF,EAAUC,OAAS,OAASN,EAE5BK,EAAUC,MAAQN,EAEpBK,EAAUG,QACV7N,QAAQC,IAAI,cAIhB,CAAE,MAAOqB,GACPyL,MAAM,yBAA2BM,GACjCrN,QAAQuI,MAAM,UAAWjH,EAC3B,CACF,EAIA,SAASwM,EAAcC,GACC,oBAAXC,QAAuC,oBAANtM,GAC1C1B,QAAQC,IAAI,gBACZ8N,MAEA/N,QAAQC,IAAI,kBACZ+H,WAAW,IAAM8F,EAAcC,GAAW,KAE9C,CAGAD,CAAc,KACZpM,EAAE,KACA1B,QAAQC,IAAI,mBACZgB,QAIJjB,QAAQC,IAAI,sBAGL,MAAMgO,GAAkB,E","sources":["src://tavern_helper_template/webpack/bootstrap","src://tavern_helper_template/webpack/runtime/define property getters","src://tavern_helper_template/webpack/runtime/hasOwnProperty shorthand","src://tavern_helper_template/src/江畔夜总会状态栏/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// ==================== 江畔夜总会状态栏 ====================\n// 使用 TypeScript + 原生实现（不使用 Vue，参考掌上公寓的实现方式）\n// 版本：规范化重构版\n\nconsole.log('🌙 加载江畔夜总会状态栏插件...');\n\n// ==================== 类型定义 ====================\ninterface NightclubData {\n  时间信息?: {\n    当前日期?: string;\n    当前时间?: string;\n    星期?: string;\n    营业状态?: string;\n  };\n  地点信息?: {\n    当前位置?: string;\n  };\n  夜总会经营?: {\n    在职员工数?: number | string;\n    VIP客户数?: number | string;\n    待处理订单?: Array<{\n      订单编号?: string;\n      客户代号?: string;\n      需求类型?: string;\n      具体要求?: string;\n      截止日期?: string;\n      状态?: string;\n      [key: string]: any;\n    }>;\n  };\n  工坊培养对象?: {\n    当前培养人数?: number | string;\n    培养列表?: Array<{\n      姓名?: string;\n      编号?: string;\n      基本信息?: {\n        年龄?: number | string;\n        原始外貌?: string;\n        来源?: string;\n        培养天数?: number | string;\n      };\n      培养进度?: number | string;\n      定制信息?: {\n        对应订单?: string;\n        目标形象?: string;\n        特殊要求?: string;\n      };\n      当前状态?: string;\n      备注?: string[];\n    }>;\n  };\n  已归档?: {\n    总数?: number | string;\n    档案列表?: Array<{\n      编号?: string;\n      艺名?: string;\n      类型?: string;\n      年龄?: number | string;\n      来源?: string;\n      特征?: string;\n      当前状态?: string;\n      评价?: string;\n      [key: string]: any;\n    }>;\n  };\n  侦测数据?: {\n    [key: string]: string;\n  };\n}\n\n// ==================== 样式定义 ====================\nconst styles = `\n<style id=\"nightclub-plugin-styles\">\n:root {\n  --nightclub-primary: #e94560;\n  --nightclub-bg-dark: #1a1a2e;\n  --nightclub-bg-mid: #16213e;\n  --nightclub-text-light: #eee;\n  --nightclub-text-dim: #aaa;\n}\n\n/* 拖动按钮 */\n.nightclub-toggle-btn {\n  position: fixed !important;\n  top: 100px;\n  left: 20px;\n  width: 64px;\n  height: 64px;\n  background: linear-gradient(135deg, #e94560 0%, #c8365a 100%);\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: grab;\n  z-index: 10000 !important;\n  box-shadow: 0 4px 12px rgba(233, 69, 96, 0.4);\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: none;\n  font-size: 28px;\n  border: 3px solid rgba(255, 255, 255, 0.3);\n  transition: transform 0.2s;\n}\n\n.nightclub-toggle-btn:hover {\n  transform: scale(1.05);\n}\n\n.nightclub-toggle-btn.dragging {\n  cursor: grabbing !important;\n  opacity: 0.9;\n  z-index: 10001 !important;\n}\n\n/* 主面板容器 */\n.nightclub-main-panel {\n  position: fixed !important;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 90vw !important;\n  max-width: 800px !important;\n  height: 85vh !important;\n  max-height: 600px !important;\n  background: linear-gradient(135deg, var(--nightclub-bg-dark) 0%, var(--nightclub-bg-mid) 100%);\n  border: 2px solid var(--nightclub-primary);\n  border-radius: 12px;\n  box-shadow: 0 8px 32px rgba(233, 69, 96, 0.4);\n  z-index: 9999 !important;\n  display: none;\n  flex-direction: column;\n  overflow: hidden;\n  color: var(--nightclub-text-light);\n  font-family: 'Microsoft YaHei', 'Segoe UI', sans-serif;\n}\n\n.nightclub-main-panel.active {\n  display: flex;\n}\n\n.nightclub-main-panel.dragging {\n  opacity: 0.95;\n  z-index: 10000 !important;\n  transition: none !important;\n}\n\n/* 头部 */\n.nightclub-header {\n  flex-shrink: 0;\n  padding: 16px 20px;\n  background: linear-gradient(135deg, var(--nightclub-primary) 0%, #c8365a 100%);\n  color: white;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: 600;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n  cursor: grab;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: none;\n}\n\n.nightclub-header.dragging {\n  cursor: grabbing !important;\n}\n\n/* 标签页导航 */\n.nightclub-tabs {\n  flex-shrink: 0;\n  display: flex;\n  background: rgba(0, 0, 0, 0.2);\n  border-bottom: 2px solid rgba(255, 255, 255, 0.1);\n}\n\n.nightclub-tab {\n  flex: 1;\n  padding: 12px 16px;\n  text-align: center;\n  background: transparent;\n  border: none;\n  color: rgba(255, 255, 255, 0.6);\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n  border-bottom: 3px solid transparent;\n  user-select: none;\n  -webkit-user-select: none;\n}\n\n.nightclub-tab:hover {\n  background: rgba(255, 255, 255, 0.05);\n  color: rgba(255, 255, 255, 0.9);\n}\n\n.nightclub-tab.active {\n  color: white;\n  background: rgba(255, 255, 255, 0.1);\n  border-bottom-color: var(--nightclub-primary);\n}\n\n.nightclub-tab-badge {\n  display: inline-block;\n  margin-left: 6px;\n  padding: 2px 6px;\n  background: rgba(255, 255, 255, 0.2);\n  border-radius: 10px;\n  font-size: 11px;\n  font-weight: 700;\n}\n\n.nightclub-tab.active .nightclub-tab-badge {\n  background: var(--nightclub-primary);\n}\n\n.nightclub-header-left {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.nightclub-header-title {\n  font-size: 18px;\n  font-weight: 700;\n}\n\n.nightclub-header-subtitle {\n  font-size: 12px;\n  opacity: 0.9;\n}\n\n.nightclub-close-btn {\n  background: rgba(255, 255, 255, 0.2);\n  border: none;\n  color: white;\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  cursor: pointer;\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s;\n}\n\n.nightclub-close-btn:hover {\n  background: rgba(255, 255, 255, 0.3);\n  transform: scale(1.1);\n}\n\n/* 内容区域 */\n.nightclub-content {\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n}\n\n.nightclub-content::-webkit-scrollbar {\n  width: 8px;\n}\n\n.nightclub-content::-webkit-scrollbar-track {\n  background: rgba(0, 0, 0, 0.1);\n}\n\n.nightclub-content::-webkit-scrollbar-thumb {\n  background: var(--nightclub-primary);\n  border-radius: 4px;\n}\n\n/* 卡片样式 */\n.nightclub-card {\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 16px;\n}\n\n.nightclub-card-title {\n  font-size: 16px;\n  font-weight: 700;\n  margin-bottom: 12px;\n  color: var(--nightclub-primary);\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.nightclub-card-content {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.nightclub-info-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.05);\n}\n\n.nightclub-info-label {\n  color: var(--nightclub-text-dim);\n  font-size: 14px;\n}\n\n.nightclub-info-value {\n  color: var(--nightclub-text-light);\n  font-size: 14px;\n  font-weight: 600;\n}\n\n/* 进度条 */\n.nightclub-progress-bar {\n  width: 100%;\n  height: 8px;\n  background: rgba(0, 0, 0, 0.3);\n  border-radius: 4px;\n  overflow: hidden;\n  margin-top: 4px;\n}\n\n.nightclub-progress-fill {\n  height: 100%;\n  background: linear-gradient(90deg, var(--nightclub-primary) 0%, #ff6b81 100%);\n  transition: width 0.3s;\n}\n\n/* 培养对象列表 */\n.nightclub-trainee-item {\n  background: rgba(255, 255, 255, 0.03);\n  border: 1px solid rgba(255, 255, 255, 0.08);\n  border-radius: 8px;\n  padding: 12px;\n  margin-bottom: 12px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.nightclub-trainee-item:hover {\n  background: rgba(255, 255, 255, 0.08);\n  border-color: var(--nightclub-primary);\n  transform: translateX(4px);\n}\n\n.nightclub-trainee-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n}\n\n.nightclub-trainee-name {\n  font-weight: 700;\n  font-size: 15px;\n  color: var(--nightclub-text-light);\n}\n\n.nightclub-trainee-status {\n  font-size: 12px;\n  color: var(--nightclub-text-dim);\n}\n\n/* 归档艺人 */\n.nightclub-archived-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  gap: 12px;\n}\n\n.nightclub-archived-item {\n  background: rgba(255, 255, 255, 0.03);\n  border: 1px solid rgba(255, 255, 255, 0.08);\n  border-radius: 8px;\n  padding: 12px;\n  text-align: center;\n}\n\n.nightclub-archived-name {\n  font-weight: 700;\n  margin-bottom: 4px;\n  color: var(--nightclub-text-light);\n}\n\n.nightclub-archived-type {\n  font-size: 12px;\n  color: var(--nightclub-text-dim);\n}\n\n/* 空状态 */\n.nightclub-empty {\n  text-align: center;\n  padding: 40px 20px;\n  color: var(--nightclub-text-dim);\n}\n\n.nightclub-empty-icon {\n  font-size: 48px;\n  margin-bottom: 12px;\n  opacity: 0.5;\n}\n\n.nightclub-empty-text {\n  font-size: 14px;\n}\n\n/* 加载状态 */\n.nightclub-loading {\n  text-align: center;\n  padding: 40px 20px;\n  color: var(--nightclub-primary);\n}\n\n.nightclub-loading-icon {\n  font-size: 32px;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n/* 移动端适配 */\n@media (max-width: 768px) {\n  .nightclub-main-panel {\n    width: 95vw !important;\n    height: 90vh !important;\n    max-height: none !important;\n  }\n  \n  .nightclub-toggle-btn {\n    width: 56px;\n    height: 56px;\n    font-size: 24px;\n    /* 确保按钮可交互 */\n    pointer-events: auto !important;\n  }\n  \n  .nightclub-header {\n    padding: 12px 16px;\n  }\n  \n  .nightclub-header-title {\n    font-size: 16px !important;\n  }\n  \n  .nightclub-header-subtitle {\n    font-size: 11px !important;\n  }\n  \n  .nightclub-card {\n    padding: 12px;\n    margin-bottom: 12px;\n  }\n  \n  .nightclub-card-title {\n    font-size: 14px;\n  }\n}\n\n/* 竖屏优化 */\n@media (max-width: 480px) and (orientation: portrait) {\n  .nightclub-main-panel {\n    width: 100vw !important;\n    height: 100vh !important;\n    border-radius: 0;\n    top: 0 !important;\n    left: 0 !important;\n    transform: none !important;\n    max-width: none !important;\n  }\n  \n  .nightclub-toggle-btn {\n    width: 50px;\n    height: 50px;\n    font-size: 22px;\n    /* 确保按钮在小屏幕下也能正常工作 */\n    z-index: 10002 !important;\n    pointer-events: auto !important;\n  }\n  \n  .nightclub-content {\n    padding: 12px;\n  }\n  \n  .nightclub-archived-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n\n/* 横屏优化 */\n@media (max-height: 600px) and (orientation: landscape) {\n  .nightclub-main-panel {\n    height: 95vh !important;\n    max-height: none !important;\n  }\n  \n  .nightclub-header {\n    padding: 10px 16px;\n  }\n  \n  .nightclub-content {\n    padding: 12px 16px;\n  }\n}\n\n/* ==================== 全局移动端优化 ==================== */\n\n/* 防止双击缩放 */\n* {\n  touch-action: manipulation;\n}\n\n/* 移除触摸高亮 */\n* {\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n}\n\n/* 优化滚动体验（iOS 平滑滚动） */\n.nightclub-content {\n  -webkit-overflow-scrolling: touch;\n}\n\n/* 移动端字体优化 */\n@media (max-width: 768px) {\n  body {\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n    text-size-adjust: 100%;\n  }\n}\n\n/* 支持刘海屏等安全区域 - 仅在小屏幕应用 */\n@media (max-width: 768px) {\n  @supports (padding: max(0px)) {\n    .nightclub-main-panel {\n      padding-top: max(0px, env(safe-area-inset-top)) !important;\n      padding-bottom: max(0px, env(safe-area-inset-bottom)) !important;\n      padding-left: max(0px, env(safe-area-inset-left)) !important;\n      padding-right: max(0px, env(safe-area-inset-right)) !important;\n    }\n  }\n}\n\n/* 移除所有按钮和可交互元素的焦点框 */\nbutton:focus,\nbutton:active,\n.nightclub-toggle-btn:focus,\n.nightclub-toggle-btn:active,\n.nightclub-close-btn:focus,\n.nightclub-close-btn:active,\n.nightclub-trainee-item:focus,\n.nightclub-trainee-item:active {\n  outline: none !important;\n  -webkit-tap-highlight-color: transparent !important;\n}\n\n/* 对象侦测页面 */\n.detection-current-display {\n  background: rgba(233, 69, 96, 0.08);\n  border: 2px solid rgba(233, 69, 96, 0.3);\n  border-radius: 12px;\n  margin-bottom: 16px;\n  overflow: hidden;\n}\n\n.detection-display-header {\n  padding: 12px 16px;\n  background: rgba(233, 69, 96, 0.15);\n  border-bottom: 1px solid rgba(233, 69, 96, 0.2);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.detection-display-title {\n  font-size: 15px;\n  font-weight: 700;\n  color: var(--nightclub-primary);\n}\n\n/* 侦测结果显示框 */\n.detection-results-display {\n  background: rgba(76, 175, 80, 0.08);\n  border: 2px solid rgba(76, 175, 80, 0.3);\n  border-radius: 12px;\n  margin-bottom: 16px;\n  overflow: hidden;\n}\n\n.detection-results-header {\n  padding: 12px 16px;\n  background: rgba(76, 175, 80, 0.15);\n  border-bottom: 1px solid rgba(76, 175, 80, 0.2);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.detection-results-title {\n  font-size: 15px;\n  font-weight: 700;\n  color: #4caf50;\n}\n\n.detection-results-content {\n  padding: 12px;\n  max-height: 300px;\n  overflow-y: auto;\n}\n\n.detection-result-item {\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 8px;\n  padding: 12px;\n  margin-bottom: 12px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.detection-result-item:hover {\n  background: rgba(255, 255, 255, 0.08);\n  border-color: rgba(76, 175, 80, 0.5);\n  transform: translateX(2px);\n}\n\n.detection-result-item:last-child {\n  margin-bottom: 0;\n}\n\n.detection-result-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n}\n\n.detection-result-name {\n  font-size: 14px;\n  font-weight: 700;\n  color: #4caf50;\n}\n\n.detection-result-toggle {\n  font-size: 12px;\n  color: var(--nightclub-text-dim);\n  padding: 4px 8px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 4px;\n  cursor: pointer;\n  user-select: none;\n}\n\n.detection-result-toggle:hover {\n  background: rgba(255, 255, 255, 0.1);\n  color: var(--nightclub-text-light);\n}\n\n.detection-result-data {\n  font-size: 13px;\n  color: var(--nightclub-text-dim);\n  line-height: 1.8;\n  display: grid;\n  grid-template-rows: 0fr;\n  transition: grid-template-rows 0.3s ease;\n  overflow: hidden;\n}\n\n.detection-result-data.expanded {\n  grid-template-rows: 1fr;\n  margin-top: 8px;\n}\n\n.detection-result-data-inner {\n  overflow: hidden;\n  padding-top: 8px;\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.detection-results-empty {\n  text-align: center;\n  padding: 24px 12px;\n  color: var(--nightclub-text-dim);\n  font-size: 13px;\n  font-style: italic;\n}\n\n.detection-display-content {\n  padding: 12px;\n  min-height: 80px;\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n.detection-display-empty {\n  text-align: center;\n  padding: 24px 12px;\n  color: var(--nightclub-text-dim);\n  font-size: 13px;\n  font-style: italic;\n}\n\n.detection-display-item {\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 8px;\n  padding: 10px 12px;\n  margin-bottom: 8px;\n}\n\n.detection-display-item:last-child {\n  margin-bottom: 0;\n}\n\n.detection-display-item-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 6px;\n  gap: 8px;\n}\n\n.detection-display-item-name {\n  font-size: 14px;\n  font-weight: 700;\n  color: var(--nightclub-text-light);\n}\n\n.detection-display-item-category {\n  font-size: 11px;\n  padding: 2px 8px;\n  background: rgba(233, 69, 96, 0.25);\n  border-radius: 10px;\n  color: var(--nightclub-primary);\n  white-space: nowrap;\n}\n\n.detection-display-item-remove {\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background: rgba(233, 69, 96, 0.3);\n  border: 1px solid var(--nightclub-primary);\n  color: var(--nightclub-primary);\n  font-size: 18px;\n  line-height: 1;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s;\n  flex-shrink: 0;\n}\n\n.detection-display-item-remove:hover {\n  background: var(--nightclub-primary);\n  color: white;\n  transform: scale(1.1);\n}\n\n.detection-display-item-info {\n  font-size: 12px;\n  color: var(--nightclub-text-dim);\n  line-height: 1.4;\n}\n\n.detection-description {\n  padding: 10px 12px;\n  background: rgba(233, 69, 96, 0.08);\n  border-left: 3px solid var(--nightclub-primary);\n  border-radius: 4px;\n  margin-bottom: 16px;\n  font-size: 12px;\n  line-height: 1.6;\n  color: var(--nightclub-text-dim);\n}\n\n.detection-clear-btn {\n  padding: 4px 12px;\n  background: rgba(233, 69, 96, 0.2);\n  border: 1px solid var(--nightclub-primary);\n  border-radius: 6px;\n  color: var(--nightclub-primary);\n  font-size: 12px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.detection-clear-btn:hover {\n  background: rgba(233, 69, 96, 0.3);\n}\n\n.detection-targets-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 12px;\n  margin-bottom: 16px;\n}\n\n.detection-target-item {\n  background: rgba(255, 255, 255, 0.03);\n  border: 2px solid rgba(255, 255, 255, 0.08);\n  border-radius: 8px;\n  padding: 12px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.detection-target-item:hover {\n  background: rgba(255, 255, 255, 0.06);\n  border-color: rgba(233, 69, 96, 0.5);\n  transform: translateY(-2px);\n}\n\n.detection-target-item.selected {\n  background: rgba(233, 69, 96, 0.15);\n  border-color: var(--nightclub-primary);\n  box-shadow: 0 0 12px rgba(233, 69, 96, 0.3);\n}\n\n.detection-target-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n}\n\n.detection-target-name {\n  font-size: 15px;\n  font-weight: 700;\n  color: var(--nightclub-text-light);\n}\n\n.detection-target-category {\n  font-size: 11px;\n  padding: 2px 8px;\n  background: rgba(233, 69, 96, 0.2);\n  border-radius: 12px;\n  color: var(--nightclub-primary);\n}\n\n.detection-target-info {\n  font-size: 12px;\n  color: var(--nightclub-text-dim);\n  margin-bottom: 8px;\n  line-height: 1.4;\n}\n\n.detection-target-status {\n  font-size: 12px;\n  text-align: center;\n  padding: 6px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 6px;\n  color: var(--nightclub-text-dim);\n}\n\n.detection-target-item.selected .detection-target-status {\n  background: rgba(233, 69, 96, 0.3);\n  color: var(--nightclub-primary);\n  font-weight: 600;\n}\n\n.detection-actions {\n  display: flex;\n  gap: 12px;\n  margin-top: 16px;\n}\n\n.detection-action-btn {\n  flex: 1;\n  padding: 12px 16px;\n  background: linear-gradient(135deg, var(--nightclub-primary) 0%, #c8365a 100%);\n  border: none;\n  border-radius: 8px;\n  color: white;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.detection-action-btn:hover:not(:disabled) {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(233, 69, 96, 0.4);\n}\n\n.detection-action-btn:disabled {\n  opacity: 0.4;\n  cursor: not-allowed;\n  transform: none;\n}\n\n.detection-action-btn.detection-remove-btn {\n  background: linear-gradient(135deg, #444 0%, #666 100%);\n}\n\n.detection-action-btn.detection-remove-btn:hover:not(:disabled) {\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n}\n\n@media (max-width: 768px) {\n  .detection-results-content {\n    max-height: 250px;\n  }\n\n  .detection-result-item {\n    padding: 10px;\n  }\n\n  .detection-result-name {\n    font-size: 13px;\n  }\n\n  .detection-result-toggle {\n    font-size: 11px;\n    padding: 3px 6px;\n  }\n\n  .detection-result-data {\n    font-size: 12px;\n  }\n\n  .detection-result-data-inner {\n    font-size: 12px;\n  }\n\n  .detection-display-content {\n    max-height: 150px;\n  }\n\n  .detection-display-item-header {\n    flex-wrap: wrap;\n  }\n\n  .detection-targets-grid {\n    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n    gap: 10px;\n  }\n  \n  .detection-actions {\n    flex-direction: column;\n  }\n}\n</style>\n`;\n\n// ==================== HTML 结构 ====================\nconst html = `\n<!-- 拖动按钮 -->\n<div id=\"nightclub-toggle-btn\" class=\"nightclub-toggle-btn\">\n  <span>🌙</span>\n</div>\n\n<!-- 主面板 -->\n<div id=\"nightclub-main-panel\" class=\"nightclub-main-panel\">\n  <div class=\"nightclub-header\">\n    <div class=\"nightclub-header-left\">\n      <div class=\"nightclub-header-title\">🌙 江畔夜总会</div>\n      <div class=\"nightclub-header-subtitle\" id=\"nightclub-time-display\">加载中...</div>\n    </div>\n    <button class=\"nightclub-close-btn\" id=\"nightclub-close-btn\">×</button>\n  </div>\n  \n  <!-- 标签页导航 -->\n  <div class=\"nightclub-tabs\">\n    <button class=\"nightclub-tab active\" data-page=\"club\">\n      🏢 会所状态\n    </button>\n    <button class=\"nightclub-tab\" data-page=\"workshop\">\n      🏭 工坊状态<span class=\"nightclub-tab-badge\" id=\"tab-badge-workshop\">0</span>\n    </button>\n    <button class=\"nightclub-tab\" data-page=\"trainees\">\n      👥 培养对象<span class=\"nightclub-tab-badge\" id=\"tab-badge-trainees\">0</span>\n    </button>\n    <button class=\"nightclub-tab\" data-page=\"archived\">\n      📁 已归档<span class=\"nightclub-tab-badge\" id=\"tab-badge-archived\">0</span>\n    </button>\n    <button class=\"nightclub-tab\" data-page=\"detection\">\n      🔍 对象侦测<span class=\"nightclub-tab-badge\" id=\"tab-badge-detection\">0</span>\n    </button>\n  </div>\n  \n  <div class=\"nightclub-content\" id=\"nightclub-content\">\n    <div class=\"nightclub-loading\">\n      <div class=\"nightclub-loading-icon\">⏳</div>\n      <div>正在加载数据...</div>\n    </div>\n  </div>\n</div>\n`;\n\n// ==================== 全局变量 ====================\nlet btnDragData: {\n  startX: number;\n  startY: number;\n  initialLeft: number;\n  initialTop: number;\n  hasDragged: boolean;\n} | null = null;\nlet panelDragData: {\n  startX: number;\n  startY: number;\n  initialLeft: number;\n  initialTop: number;\n  hasDragged: boolean;\n} | null = null;\nlet cachedMVUData: any = null;\nconst MAX_RETRIES = 5;\nconst RETRY_DELAY = 400;\nlet currentRetry = 0;\nconst DRAG_THRESHOLD = 5; // 拖动阈值（像素），小于此值视为点击\nlet currentPage: 'club' | 'workshop' | 'trainees' | 'archived' | 'detection' = 'club'; // 当前页面\nlet selectedDetectionTargets: Set<string> = new Set(); // 选中的侦测对象\n\n// ==================== 工具函数 ====================\nfunction safeGet(data: any, path: string, defaultValue: string = '未知'): string {\n  if (!data) return defaultValue;\n  const keys = path.split('.');\n  let current = data;\n  for (const key of keys) {\n    if (current === undefined || current === null || typeof current !== 'object') {\n      return defaultValue;\n    }\n    current = current[key];\n  }\n  if (current === undefined || current === null) return defaultValue;\n  return String(current) === '' ? defaultValue : String(current);\n}\n\n// ==================== 初始化函数 ====================\nfunction initializeNightclubPlugin(): void {\n  console.log('🚀 初始化江畔夜总会状态栏插件...');\n\n  // 获取目标文档（添加错误处理，防止跨域问题）\n  let targetDoc: Document;\n  try {\n    targetDoc = window.top ? window.top.document : document;\n  } catch (e) {\n    console.warn('⚠️ 无法访问 window.top，使用当前 document');\n    targetDoc = document;\n  }\n\n  // 检查是否已存在\n  if (targetDoc.getElementById('nightclub-toggle-btn')) {\n    console.log('⚠️ 江畔夜总会状态栏已存在，先移除旧的');\n    targetDoc.getElementById('nightclub-toggle-btn')?.remove();\n    targetDoc.getElementById('nightclub-main-panel')?.remove();\n    targetDoc.getElementById('nightclub-plugin-styles')?.remove();\n    // 清理事件\n    $(targetDoc).off('.nightclub-plugin');\n    $(targetDoc).off('.nightclub-panel');\n    $(window).off('.nightclub-panel');\n  }\n\n  // 注入样式\n  if (!targetDoc.getElementById('nightclub-plugin-styles')) {\n    targetDoc.head.insertAdjacentHTML('beforeend', styles);\n    console.log('✅ 样式已注入');\n  }\n\n  // 注入 HTML\n  targetDoc.body.insertAdjacentHTML('beforeend', html);\n  console.log('✅ HTML 已注入');\n\n  // 从 localStorage 恢复按钮位置\n  const btn = targetDoc.getElementById('nightclub-toggle-btn');\n  if (btn) {\n    try {\n      const saved = localStorage.getItem('nightclub-btn-position');\n      if (saved) {\n        const pos = JSON.parse(saved);\n        btn.style.left = pos.left + 'px';\n        btn.style.top = pos.top + 'px';\n        console.log('📍 恢复按钮位置:', pos);\n      }\n    } catch (e) {\n      console.warn('⚠️ 恢复按钮位置失败');\n    }\n  }\n\n  // 初始化按钮拖动功能\n  initializeButtonDrag(targetDoc);\n\n  // 初始化面板功能\n  initializePanelSystem(targetDoc);\n\n  console.log('✅ 江畔夜总会状态栏插件初始化完成！');\n}\n\n// ==================== 按钮拖动功能 ====================\nfunction initializeButtonDrag(targetDoc: Document): void {\n  const btn = targetDoc.getElementById('nightclub-toggle-btn');\n  const panel = targetDoc.getElementById('nightclub-main-panel');\n  if (!btn || !panel) return;\n\n  const $targetDoc = $(targetDoc);\n\n  // 拖动开始\n  function handleBtnDragStart(clientX: number, clientY: number): boolean {\n    if (btnDragData) return false;\n\n    const computedStyle = window.getComputedStyle(btn);\n    const currentLeft = parseInt(computedStyle.left) || 0;\n    const currentTop = parseInt(computedStyle.top) || 0;\n\n    btnDragData = {\n      startX: clientX,\n      startY: clientY,\n      initialLeft: currentLeft,\n      initialTop: currentTop,\n      hasDragged: false, // 初始化为未拖动\n    };\n\n    console.log('🖱️ 准备拖动按钮');\n    return true;\n  }\n\n  // 拖动移动\n  function handleBtnDragMove(clientX: number, clientY: number): void {\n    if (!btnDragData) return;\n\n    const deltaX = clientX - btnDragData.startX;\n    const deltaY = clientY - btnDragData.startY;\n\n    // 检查是否超过拖动阈值\n    if (!btnDragData.hasDragged && (Math.abs(deltaX) > DRAG_THRESHOLD || Math.abs(deltaY) > DRAG_THRESHOLD)) {\n      btnDragData.hasDragged = true;\n      btn.classList.add('dragging');\n      console.log('🖱️ 开始拖动按钮');\n    }\n\n    // 只有真正拖动时才移动\n    if (btnDragData.hasDragged) {\n      let newLeft = btnDragData.initialLeft + deltaX;\n      let newTop = btnDragData.initialTop + deltaY;\n\n      // 限制范围\n      let targetWindow: Window;\n      try {\n        targetWindow = window.top || window;\n      } catch (e) {\n        targetWindow = window;\n      }\n      const maxX = $(targetWindow).width()! - 80;\n      const maxY = $(targetWindow).height()! - 80;\n\n      newLeft = Math.max(0, Math.min(newLeft, maxX));\n      newTop = Math.max(0, Math.min(newTop, maxY));\n\n      btn.style.left = newLeft + 'px';\n      btn.style.top = newTop + 'px';\n    }\n  }\n\n  // 拖动结束\n  function handleBtnDragEnd(clientX: number, clientY: number): void {\n    if (!btnDragData) return;\n\n    const wasDragged = btnDragData.hasDragged;\n\n    btn.classList.remove('dragging');\n\n    // 保存位置\n    if (wasDragged) {\n      const computedStyle = window.getComputedStyle(btn);\n      const currentLeft = parseInt(computedStyle.left) || 0;\n      const currentTop = parseInt(computedStyle.top) || 0;\n\n      const position = {\n        left: currentLeft,\n        top: currentTop,\n      };\n\n      localStorage.setItem('nightclub-btn-position', JSON.stringify(position));\n      console.log('✅ 按钮拖动结束，保存位置:', position);\n    }\n\n    btnDragData = null;\n\n    // 如果没有真正拖动，视为点击\n    if (!wasDragged) {\n      console.log('🎨 检测到点击，切换面板');\n      togglePanel(targetDoc);\n    }\n  }\n\n  // 绑定事件\n  $(btn).on('mousedown.nightclub-plugin', function (e) {\n    if (handleBtnDragStart(e.clientX, e.clientY)) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  });\n\n  // 触摸事件需要特殊处理，防止干扰默认滚动\n  btn.addEventListener(\n    'touchstart',\n    function (e: TouchEvent) {\n      const touch = e.touches[0];\n      if (handleBtnDragStart(touch.clientX, touch.clientY)) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    },\n    { passive: false }, // 必须为 false 才能调用 preventDefault\n  );\n\n  $targetDoc.on('mousemove.nightclub-plugin', function (e) {\n    handleBtnDragMove(e.clientX, e.clientY);\n    if (btnDragData) e.preventDefault();\n  });\n\n  $targetDoc.on('touchmove.nightclub-plugin', function (e) {\n    const touch = e.originalEvent!.touches[0];\n    handleBtnDragMove(touch.clientX, touch.clientY);\n    if (btnDragData) e.preventDefault();\n  });\n\n  $targetDoc.on('mouseup.nightclub-plugin', function (e) {\n    handleBtnDragEnd(e.clientX, e.clientY);\n  });\n\n  $targetDoc.on('touchend.nightclub-plugin touchcancel.nightclub-plugin', function (e) {\n    const touch = e.originalEvent!.changedTouches[0];\n    if (touch) {\n      handleBtnDragEnd(touch.clientX, touch.clientY);\n    } else {\n      handleBtnDragEnd(0, 0);\n    }\n  });\n\n  console.log('✅ 按钮拖动功能已初始化');\n}\n\n// ==================== 面板系统 ====================\nfunction initializePanelSystem(targetDoc: Document): void {\n  const closeBtn = targetDoc.getElementById('nightclub-close-btn');\n  if (closeBtn) {\n    closeBtn.addEventListener('click', e => {\n      e.stopPropagation(); // 防止触发拖动\n      const panel = targetDoc.getElementById('nightclub-main-panel');\n      if (panel) {\n        panel.classList.remove('active');\n      }\n    });\n  }\n\n  // 初始化标签页切换\n  initializeTabSwitching(targetDoc);\n\n  // 初始化面板拖动功能\n  initializePanelDrag(targetDoc);\n\n  console.log('✅ 面板系统已初始化');\n}\n\n// ==================== 标签页切换 ====================\nfunction initializeTabSwitching(targetDoc: Document): void {\n  const tabs = targetDoc.querySelectorAll('.nightclub-tab');\n\n  tabs.forEach(tab => {\n    tab.addEventListener('click', function (e) {\n      e.stopPropagation(); // 防止触发拖动\n\n      const page = (this as HTMLElement).getAttribute('data-page') as\n        | 'club'\n        | 'workshop'\n        | 'trainees'\n        | 'archived'\n        | 'detection';\n      if (!page) return;\n\n      // 更新当前页面\n      currentPage = page;\n\n      // 更新标签状态\n      tabs.forEach(t => t.classList.remove('active'));\n      this.classList.add('active');\n\n      // 重新渲染当前页面内容\n      if (cachedMVUData) {\n        renderNightclubData(targetDoc, cachedMVUData);\n      }\n\n      console.log('📄 切换到页面:', page);\n    });\n  });\n\n  console.log('✅ 标签页切换已初始化');\n}\n\n// ==================== 面板拖动功能 ====================\nfunction initializePanelDrag(targetDoc: Document): void {\n  const panel = targetDoc.getElementById('nightclub-main-panel');\n  const header = targetDoc.getElementById('nightclub-close-btn')?.parentElement;\n\n  if (!panel || !header) return;\n\n  const $targetDoc = $(targetDoc);\n  const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\n  // 从 localStorage 恢复面板位置\n  function restorePanelPosition() {\n    try {\n      const saved = localStorage.getItem('nightclub-panel-position');\n      if (saved) {\n        const pos = JSON.parse(saved);\n        // 检查是否在移动端竖屏模式\n        const isPortraitMobile = window.innerWidth <= 480 && window.innerWidth < window.innerHeight;\n\n        if (!isPortraitMobile) {\n          panel.style.transform = 'none';\n          panel.style.left = pos.left + 'px';\n          panel.style.top = pos.top + 'px';\n          console.log('📍 恢复面板位置:', pos);\n        }\n      }\n    } catch (e) {\n      console.warn('⚠️ 恢复面板位置失败');\n    }\n  }\n\n  // 拖动开始\n  function handlePanelDragStart(clientX: number, clientY: number): boolean {\n    if (panelDragData) return false;\n\n    // 检查是否在移动端竖屏模式（全屏模式不允许拖动）\n    const isPortraitMobile = window.innerWidth <= 480 && window.innerWidth < window.innerHeight;\n    if (isPortraitMobile) return false;\n\n    const rect = panel.getBoundingClientRect();\n\n    panelDragData = {\n      startX: clientX,\n      startY: clientY,\n      initialLeft: rect.left,\n      initialTop: rect.top,\n      hasDragged: false, // 初始化为未拖动\n    };\n\n    console.log('🖱️ 准备拖动面板');\n    return true;\n  }\n\n  // 拖动移动\n  function handlePanelDragMove(clientX: number, clientY: number): void {\n    if (!panelDragData) return;\n\n    const deltaX = clientX - panelDragData.startX;\n    const deltaY = clientY - panelDragData.startY;\n\n    // 检查是否超过拖动阈值\n    if (!panelDragData.hasDragged && (Math.abs(deltaX) > DRAG_THRESHOLD || Math.abs(deltaY) > DRAG_THRESHOLD)) {\n      panelDragData.hasDragged = true;\n      panel.classList.add('dragging');\n      header.classList.add('dragging');\n      console.log('🖱️ 开始拖动面板');\n    }\n\n    // 只有真正拖动时才移动\n    if (panelDragData.hasDragged) {\n      let newLeft = panelDragData.initialLeft + deltaX;\n      let newTop = panelDragData.initialTop + deltaY;\n\n      // 获取面板尺寸\n      const panelWidth = panel.offsetWidth;\n      const panelHeight = panel.offsetHeight;\n\n      // 限制范围（至少保留 50px 在视口内）\n      let targetWindow: Window;\n      try {\n        targetWindow = window.top || window;\n      } catch (e) {\n        targetWindow = window;\n      }\n      const viewportWidth = $(targetWindow).width()!;\n      const viewportHeight = $(targetWindow).height()!;\n\n      newLeft = Math.max(-panelWidth + 50, Math.min(newLeft, viewportWidth - 50));\n      newTop = Math.max(0, Math.min(newTop, viewportHeight - 50));\n\n      // 移除 transform，使用 left/top 定位\n      panel.style.transform = 'none';\n      panel.style.left = newLeft + 'px';\n      panel.style.top = newTop + 'px';\n    }\n  }\n\n  // 拖动结束\n  function handlePanelDragEnd(): void {\n    if (!panelDragData) return;\n\n    const wasDragged = panelDragData.hasDragged;\n\n    panel.classList.remove('dragging');\n    header.classList.remove('dragging');\n\n    // 保存位置\n    if (wasDragged) {\n      const rect = panel.getBoundingClientRect();\n      const position = {\n        left: rect.left,\n        top: rect.top,\n      };\n\n      localStorage.setItem('nightclub-panel-position', JSON.stringify(position));\n      console.log('✅ 面板拖动结束，保存位置:', position);\n    }\n\n    panelDragData = null;\n  }\n\n  // 绑定鼠标事件\n  $(header).on('mousedown.nightclub-panel', function (e) {\n    // 不处理关闭按钮的点击\n    if ((e.target as HTMLElement).closest('.nightclub-close-btn')) {\n      return;\n    }\n\n    if (handlePanelDragStart(e.clientX, e.clientY)) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  });\n\n  // 绑定触摸事件（使用原生事件以支持 passive 选项）\n  header.addEventListener(\n    'touchstart',\n    function (e: TouchEvent) {\n      // 不处理关闭按钮的触摸\n      if ((e.target as HTMLElement).closest('.nightclub-close-btn')) {\n        return;\n      }\n\n      const touch = e.touches[0];\n      if (handlePanelDragStart(touch.clientX, touch.clientY)) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    },\n    { passive: false }, // 必须为 false 才能调用 preventDefault\n  );\n\n  $targetDoc.on('mousemove.nightclub-panel', function (e) {\n    handlePanelDragMove(e.clientX, e.clientY);\n    if (panelDragData) e.preventDefault();\n  });\n\n  $targetDoc.on('touchmove.nightclub-panel', function (e) {\n    const touch = e.originalEvent!.touches[0];\n    handlePanelDragMove(touch.clientX, touch.clientY);\n    if (panelDragData) e.preventDefault();\n  });\n\n  $targetDoc.on('mouseup.nightclub-panel', function () {\n    handlePanelDragEnd();\n  });\n\n  $targetDoc.on('touchend.nightclub-panel touchcancel.nightclub-panel', function () {\n    handlePanelDragEnd();\n  });\n\n  // 窗口大小改变时重置位置（如果切换到移动端竖屏）\n  $(window).on('resize.nightclub-panel orientationchange.nightclub-panel', function () {\n    const isPortraitMobile = window.innerWidth <= 480 && window.innerWidth < window.innerHeight;\n    if (isPortraitMobile) {\n      // 移动端竖屏模式，重置为全屏\n      panel.style.transform = 'none';\n      panel.style.left = '0';\n      panel.style.top = '0';\n    } else {\n      // 非移动端竖屏，恢复保存的位置或居中\n      restorePanelPosition();\n    }\n  });\n\n  // 恢复位置\n  restorePanelPosition();\n\n  console.log('✅ 面板拖动功能已初始化');\n}\n\nfunction togglePanel(targetDoc: Document): void {\n  const panel = targetDoc.getElementById('nightclub-main-panel');\n  if (!panel) return;\n\n  const isActive = panel.classList.contains('active');\n\n  if (isActive) {\n    panel.classList.remove('active');\n  } else {\n    panel.classList.add('active');\n    // 打开面板时加载数据\n    currentRetry = 0;\n    loadNightclubData(targetDoc);\n  }\n}\n\n// ==================== 数据加载 ====================\nasync function loadNightclubData(targetDoc: Document): Promise<void> {\n  try {\n    // 检查 MVU 是否可用（改进版，更健壮）\n    if (typeof Mvu === 'undefined') {\n      // 尝试从父窗口获取（添加错误处理）\n      try {\n        if (window.parent && typeof (window.parent as any).Mvu !== 'undefined') {\n          (window as any).Mvu = (window.parent as any).Mvu;\n          console.log('✅ 已从父窗口引用 MVU');\n        } else {\n          throw new Error('父窗口中也没有 MVU');\n        }\n      } catch (e) {\n        console.warn('⚠️ MVU 框架未加载或无法访问父窗口');\n        if (currentRetry < MAX_RETRIES) {\n          currentRetry++;\n          console.log(`🔄 第 ${currentRetry}/${MAX_RETRIES} 次重试加载 MVU...`);\n          setTimeout(() => loadNightclubData(targetDoc), RETRY_DELAY);\n        } else {\n          showError(targetDoc, 'MVU 框架未加载，请确保已安装酒馆助手并启用 MVU 框架');\n        }\n        return;\n      }\n    }\n\n    // 获取最新消息的 MVU 数据\n    const mvuResult = Mvu.getMvuData({\n      type: 'message',\n      message_id: 'latest',\n    });\n\n    const data = mvuResult?.stat_data;\n\n    if (!data) {\n      console.warn('⚠️ MVU 数据为空');\n      if (currentRetry < MAX_RETRIES) {\n        currentRetry++;\n        setTimeout(() => loadNightclubData(targetDoc), RETRY_DELAY);\n      } else {\n        showError(targetDoc, '未能加载数据');\n      }\n      return;\n    }\n\n    cachedMVUData = data;\n    console.log('✅ 数据加载成功', data);\n\n    // 渲染数据\n    renderNightclubData(targetDoc, data);\n  } catch (error) {\n    console.error('❌ 加载数据出错:', error);\n    showError(targetDoc, '加载出错: ' + (error as Error).message);\n  }\n}\n\nfunction showError(targetDoc: Document, message: string): void {\n  const contentDiv = targetDoc.getElementById('nightclub-content');\n  if (contentDiv) {\n    contentDiv.innerHTML = `\n      <div class=\"nightclub-empty\">\n        <div class=\"nightclub-empty-icon\">⚠️</div>\n        <div class=\"nightclub-empty-text\">${message}</div>\n      </div>\n    `;\n  }\n}\n\n// ==================== 数据渲染 ====================\nfunction renderNightclubData(targetDoc: Document, data: NightclubData): void {\n  const contentDiv = targetDoc.getElementById('nightclub-content');\n  const timeDisplay = targetDoc.getElementById('nightclub-time-display');\n\n  if (!contentDiv) return;\n\n  // 更新时间显示\n  if (timeDisplay && data.时间信息) {\n    const dateText = safeGet(data, '时间信息.当前日期', '');\n    const timeText = safeGet(data, '时间信息.当前时间', '');\n    const statusText = safeGet(data, '时间信息.营业状态', '');\n    const locationText = safeGet(data, '地点信息.当前位置', '');\n    timeDisplay.textContent = `${dateText} ${timeText} | ${statusText}${locationText ? ` | ${locationText}` : ''}`;\n  }\n\n  // 更新标签徽章\n  const ordersCount = data.夜总会经营?.待处理订单?.length || 0;\n  const traineesCount = data.工坊培养对象?.培养列表?.length || 0;\n  const archivedCount = data.已归档?.档案列表?.length || 0;\n  const detectionCount = data.侦测数据 ? Object.keys(data.侦测数据).length : 0;\n\n  const workshopBadge = targetDoc.getElementById('tab-badge-workshop');\n  const traineesBadge = targetDoc.getElementById('tab-badge-trainees');\n  const archivedBadge = targetDoc.getElementById('tab-badge-archived');\n  const detectionBadge = targetDoc.getElementById('tab-badge-detection');\n\n  if (workshopBadge) workshopBadge.textContent = String(ordersCount);\n  if (traineesBadge) traineesBadge.textContent = String(traineesCount);\n  if (archivedBadge) archivedBadge.textContent = String(archivedCount);\n  if (detectionBadge) detectionBadge.textContent = String(detectionCount);\n\n  // 构建 HTML\n  let html = '';\n\n  // 根据当前页面渲染不同内容\n  if (currentPage === 'club') {\n    // ========== 会所状态页面 ==========\n    html += renderClubPage(data);\n  } else if (currentPage === 'workshop') {\n    // ========== 工坊状态页面 ==========\n    html += renderWorkshopPage(data);\n  } else if (currentPage === 'trainees') {\n    // ========== 培养对象页面 ==========\n    html += renderTraineesPage(data);\n  } else if (currentPage === 'archived') {\n    // ========== 已归档页面 ==========\n    html += renderArchivedPage(data);\n  } else if (currentPage === 'detection') {\n    // ========== 对象侦测页面 ==========\n    html += renderDetectionPage(data);\n  }\n\n  contentDiv.innerHTML = html;\n\n  // 如果是侦测页面，需要绑定事件\n  if (currentPage === 'detection') {\n    initializeDetectionEvents(targetDoc);\n  }\n}\n\n// ==================== 渲染会所状态页面 ====================\nfunction renderClubPage(data: NightclubData): string {\n  let html = '';\n\n  // 经营状况\n  if (data.夜总会经营) {\n    html += `\n      <div class=\"nightclub-card\">\n        <div class=\"nightclub-card-title\">\n          <span>💼</span>\n          <span>经营状况</span>\n        </div>\n        <div class=\"nightclub-card-content\">\n          <div class=\"nightclub-info-row\">\n            <span class=\"nightclub-info-label\">VIP客户</span>\n            <span class=\"nightclub-info-value\">${safeGet(data, '夜总会经营.VIP客户数', '0')} 人</span>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  // 地上各区域状态（预留接口）\n  html += `\n    <div class=\"nightclub-card\">\n      <div class=\"nightclub-card-title\">\n        <span>🏢</span>\n        <span>地上区域</span>\n      </div>\n      <div class=\"nightclub-card-content\">\n          <div class=\"nightclub-info-row\">\n          <span class=\"nightclub-info-label\">酒水吧台</span>\n          <span class=\"nightclub-info-value\">正常营业</span>\n          </div>\n        <div class=\"nightclub-info-row\">\n          <span class=\"nightclub-info-label\">豪华舞厅</span>\n          <span class=\"nightclub-info-value\">正常营业</span>\n        </div>\n        <div class=\"nightclub-info-row\">\n          <span class=\"nightclub-info-label\">KTV包厢</span>\n          <span class=\"nightclub-info-value\">正常营业</span>\n        </div>\n        <div class=\"nightclub-info-row\">\n          <span class=\"nightclub-info-label\">VIP休息室</span>\n          <span class=\"nightclub-info-value\">正常营业</span>\n        </div>\n        </div>\n      </div>\n    `;\n\n  return html;\n}\n\n// ==================== 渲染工坊状态页面 ====================\nfunction renderWorkshopPage(data: NightclubData): string {\n  let html = '';\n\n  // 地下各区域状态\n  html += `\n    <div class=\"nightclub-card\">\n      <div class=\"nightclub-card-title\">\n        <span>🏭</span>\n        <span>地下区域</span>\n      </div>\n      <div class=\"nightclub-card-content\">\n        <div class=\"nightclub-info-row\">\n          <span class=\"nightclub-info-label\">基础培训中心</span>\n          <span class=\"nightclub-info-value\">运行中</span>\n        </div>\n        <div class=\"nightclub-info-row\">\n          <span class=\"nightclub-info-label\">形体塑造中心</span>\n          <span class=\"nightclub-info-value\">运行中</span>\n        </div>\n        <div class=\"nightclub-info-row\">\n          <span class=\"nightclub-info-label\">保养护理中心</span>\n          <span class=\"nightclub-info-value\">运行中</span>\n        </div>\n        <div class=\"nightclub-info-row\">\n          <span class=\"nightclub-info-label\">当前培养人数</span>\n          <span class=\"nightclub-info-value\">${data.工坊培养对象?.当前培养人数 || 0} 人</span>\n        </div>\n      </div>\n    </div>\n  `;\n\n  // 待处理订单详情\n  if (data.夜总会经营?.待处理订单 && data.夜总会经营.待处理订单.length > 0) {\n    const orders = data.夜总会经营.待处理订单;\n    html += `\n      <div class=\"nightclub-card\">\n        <div class=\"nightclub-card-title\">\n          <span>📋</span>\n          <span>订单详情 (${orders.length})</span>\n        </div>\n        <div class=\"nightclub-card-content\">\n    `;\n\n    orders.forEach(order => {\n      const orderNum = order.订单编号 || '未知';\n      const client = order.客户代号 || '未知';\n      const type = order.需求类型 || '';\n      const requirements = order.具体要求 || '';\n      const deadline = order.截止日期 || '';\n      const status = order.状态 || '待处理';\n\n      html += `\n        <div class=\"nightclub-trainee-item\">\n          <div class=\"nightclub-trainee-header\">\n            <span class=\"nightclub-trainee-name\">${orderNum}</span>\n            <span class=\"nightclub-trainee-status\">${status}</span>\n          </div>\n          <div class=\"nightclub-info-row\">\n            <span class=\"nightclub-info-label\">客户</span>\n            <span class=\"nightclub-info-value\">${client}</span>\n          </div>\n          ${\n            type\n              ? `\n          <div class=\"nightclub-info-row\">\n            <span class=\"nightclub-info-label\">需求类型</span>\n            <span class=\"nightclub-info-value\">${type}</span>\n          </div>`\n              : ''\n          }\n          ${\n            requirements\n              ? `\n          <div class=\"nightclub-info-row\">\n            <span class=\"nightclub-info-label\">具体要求</span>\n            <span class=\"nightclub-info-value\">${requirements}</span>\n          </div>`\n              : ''\n          }\n          ${\n            deadline\n              ? `\n          <div class=\"nightclub-info-row\">\n            <span class=\"nightclub-info-label\">截止日期</span>\n            <span class=\"nightclub-info-value\">${deadline}</span>\n          </div>`\n              : ''\n          }\n        </div>\n      `;\n    });\n\n    html += `\n        </div>\n      </div>\n    `;\n  } else {\n    html += `\n      <div class=\"nightclub-empty\">\n        <div class=\"nightclub-empty-icon\">📭</div>\n        <div class=\"nightclub-empty-text\">暂无待处理订单</div>\n      </div>\n    `;\n  }\n\n  return html;\n}\n\n// ==================== 渲染培养对象页面 ====================\nfunction renderTraineesPage(data: NightclubData): string {\n  let html = '';\n\n  if (data.工坊培养对象) {\n    const trainees = data.工坊培养对象.培养列表 || [];\n\n    if (trainees.length === 0) {\n      html += `\n          <div class=\"nightclub-empty\">\n            <div class=\"nightclub-empty-icon\">📭</div>\n            <div class=\"nightclub-empty-text\">暂无培养对象</div>\n          </div>\n      `;\n    } else {\n      html += `\n        <div class=\"nightclub-card\">\n          <div class=\"nightclub-card-title\">\n            <span>👥</span>\n            <span>工坊培养对象 (${trainees.length})</span>\n          </div>\n          <div class=\"nightclub-card-content\">\n      `;\n\n      trainees.forEach(trainee => {\n        const name = trainee.姓名 || '未知';\n        const code = trainee.编号 || '';\n        const age = trainee.基本信息?.年龄 || '';\n        const origin = trainee.基本信息?.来源 || '';\n        const appearance = trainee.基本信息?.原始外貌 || '';\n        const days = trainee.基本信息?.培养天数 || '0';\n        const progress = typeof trainee.培养进度 === 'number' ? trainee.培养进度 : trainee.培养进度 || '0';\n        const order = trainee.定制信息?.对应订单 || '无';\n        const target = trainee.定制信息?.目标形象 || '未定';\n        const requirements = trainee.定制信息?.特殊要求 || '';\n        const status = trainee.当前状态 || '培训中';\n\n        html += `\n          <div class=\"nightclub-trainee-item\">\n            <div class=\"nightclub-trainee-header\">\n              <span class=\"nightclub-trainee-name\">${name}${code ? ` (${code})` : ''}</span>\n              <span class=\"nightclub-trainee-status\">${status}</span>\n            </div>\n            <div class=\"nightclub-info-row\">\n              <span class=\"nightclub-info-label\">年龄 / 来源</span>\n              <span class=\"nightclub-info-value\">${age}岁 / ${origin}</span>\n            </div>\n            ${\n              appearance\n                ? `\n            <div class=\"nightclub-info-row\">\n              <span class=\"nightclub-info-label\">原始外貌</span>\n              <span class=\"nightclub-info-value\">${appearance}</span>\n            </div>`\n                : ''\n            }\n            <div class=\"nightclub-info-row\">\n              <span class=\"nightclub-info-label\">培养天数</span>\n              <span class=\"nightclub-info-value\">${days} 天</span>\n            </div>\n            <div class=\"nightclub-info-row\">\n              <span class=\"nightclub-info-label\">培养进度</span>\n              <span class=\"nightclub-info-value\">${progress}%</span>\n            </div>\n            <div class=\"nightclub-progress-bar\">\n              <div class=\"nightclub-progress-fill\" style=\"width: ${progress}%\"></div>\n            </div>\n            <div class=\"nightclub-info-row\">\n              <span class=\"nightclub-info-label\">对应订单</span>\n              <span class=\"nightclub-info-value\">${order}</span>\n            </div>\n            <div class=\"nightclub-info-row\">\n              <span class=\"nightclub-info-label\">目标形象</span>\n              <span class=\"nightclub-info-value\">${target}</span>\n            </div>\n            ${\n              requirements\n                ? `\n            <div class=\"nightclub-info-row\">\n              <span class=\"nightclub-info-label\">特殊要求</span>\n              <span class=\"nightclub-info-value\">${requirements}</span>\n            </div>`\n                : ''\n            }\n          </div>\n        `;\n      });\n\n      html += `\n        </div>\n      </div>\n    `;\n    }\n  }\n\n  return html;\n}\n\n// ==================== 渲染已归档页面 ====================\nfunction renderArchivedPage(data: NightclubData): string {\n  let html = '';\n\n  if (data.已归档) {\n    const archived = data.已归档.档案列表 || [];\n\n    if (archived.length === 0) {\n      html += `\n          <div class=\"nightclub-empty\">\n            <div class=\"nightclub-empty-icon\">📭</div>\n            <div class=\"nightclub-empty-text\">暂无归档艺人</div>\n          </div>\n      `;\n    } else {\n      html += `\n        <div class=\"nightclub-card\">\n          <div class=\"nightclub-card-title\">\n            <span>📁</span>\n            <span>已归档 (${archived.length})</span>\n          </div>\n          <div class=\"nightclub-card-content\">\n      `;\n\n      archived.forEach(artist => {\n        const code = artist.编号 || '';\n        const name = artist.艺名 || '未知';\n        const type = artist.类型 || '未知';\n        const age = artist.年龄 || '';\n        const origin = artist.来源 || '';\n        const features = artist.特征 || '';\n        const currentStatus = artist.当前状态 || '';\n        const evaluation = artist.评价 || '';\n\n        html += `\n          <div class=\"nightclub-trainee-item\">\n            <div class=\"nightclub-trainee-header\">\n              <span class=\"nightclub-trainee-name\">${name}${code ? ` (${code})` : ''}</span>\n              <span class=\"nightclub-trainee-status\">${type}</span>\n            </div>\n            <div class=\"nightclub-info-row\">\n              <span class=\"nightclub-info-label\">年龄 / 来源</span>\n              <span class=\"nightclub-info-value\">${age ? age + '岁' : ''} ${age && origin ? '/' : ''} ${origin}</span>\n            </div>\n            ${\n              features\n                ? `\n            <div class=\"nightclub-info-row\">\n              <span class=\"nightclub-info-label\">特征</span>\n              <span class=\"nightclub-info-value\">${features}</span>\n            </div>`\n                : ''\n            }\n            ${\n              currentStatus\n                ? `\n            <div class=\"nightclub-info-row\">\n              <span class=\"nightclub-info-label\">当前状态</span>\n              <span class=\"nightclub-info-value\">${currentStatus}</span>\n            </div>`\n                : ''\n            }\n            ${\n              evaluation\n                ? `\n            <div class=\"nightclub-info-row\">\n              <span class=\"nightclub-info-label\">评价</span>\n              <span class=\"nightclub-info-value\">${evaluation}</span>\n            </div>`\n                : ''\n            }\n          </div>\n        `;\n      });\n\n      html += `\n          </div>\n          </div>\n        `;\n    }\n  }\n\n  return html;\n}\n\n// ==================== 渲染对象侦测页面 ====================\nfunction renderDetectionPage(data: NightclubData): string {\n  let html = '';\n\n  // 获取已有的侦测数据\n  const detectionData = data.侦测数据 || {};\n  const detectionCount = Object.keys(detectionData).length;\n\n  // 辅助函数：将 \\n 转换为 <br>\n  const formatDetectionText = (text: string): string => {\n    return text.replace(/\\\\n/g, '<br>').replace(/\\n/g, '<br>');\n  };\n\n  // 收集所有可侦测的角色\n  const availableTargets: Array<{ name: string; category: string; info: string }> = [];\n\n  // 添加培养对象\n  if (data.工坊培养对象?.培养列表) {\n    data.工坊培养对象.培养列表.forEach(trainee => {\n      if (trainee.姓名) {\n        availableTargets.push({\n          name: trainee.姓名,\n          category: '培养对象',\n          info: `编号: ${trainee.编号 || '未知'} | 培养进度: ${trainee.培养进度 || '0'}%`,\n        });\n      }\n    });\n  }\n\n  // 添加已归档对象\n  if (data.已归档?.档案列表) {\n    data.已归档.档案列表.forEach(artist => {\n      if (artist.艺名) {\n        availableTargets.push({\n          name: artist.艺名,\n          category: '已归档',\n          info: `类型: ${artist.类型 || '未知'} | 状态: ${artist.当前状态 || '未知'}`,\n        });\n      }\n    });\n  }\n\n  // 添加云舒和云卷\n  availableTargets.push(\n    { name: '云舒', category: '管理层', info: '会所管理者 | 地上业务负责人' },\n    { name: '云卷', category: '管理层', info: '工坊管理者 | 地下业务负责人' },\n  );\n\n  html += `\n    <div class=\"nightclub-card\">\n      <div class=\"nightclub-card-title\">\n        <span>🔍</span>\n        <span>对象侦测</span>\n        </div>\n      <div class=\"nightclub-card-content\">\n        <!-- 已有侦测结果显示框 -->\n        <div class=\"detection-results-display\">\n          <div class=\"detection-results-header\">\n            <span class=\"detection-results-title\">📊 侦测结果 (${detectionCount})</span>\n          </div>\n          <div class=\"detection-results-content\">\n            ${\n              detectionCount === 0\n                ? `<div class=\"detection-results-empty\">暂无侦测数据</div>`\n                : Object.entries(detectionData)\n                    .map(([name, detectionText]) => {\n                      const escapedName = name.replace(/'/g, \"\\\\'\");\n                      const formattedText = formatDetectionText(detectionText);\n                      return `\n                      <div class=\"detection-result-item\" data-detection-target=\"${escapedName}\">\n                        <div class=\"detection-result-header\">\n                          <span class=\"detection-result-name\">${name}</span>\n                          <span class=\"detection-result-toggle\">点击展开/收起</span>\n                        </div>\n                        <div class=\"detection-result-data\">\n                          <div class=\"detection-result-data-inner\">${formattedText}</div>\n                        </div>\n                      </div>\n                    `;\n                    })\n                    .join('')\n            }\n          </div>\n        </div>\n        \n        <!-- 当前选中对象显示框 -->\n        <div class=\"detection-current-display\">\n          <div class=\"detection-display-header\">\n            <span class=\"detection-display-title\">📋 当前选中对象 (${selectedDetectionTargets.size}/3)</span>\n            ${\n              selectedDetectionTargets.size > 0\n                ? `<button class=\"detection-clear-btn\" id=\"detection-clear-all\">清空</button>`\n                : ''\n            }\n          </div>\n          <div class=\"detection-display-content\">\n            ${\n              selectedDetectionTargets.size === 0\n                ? `<div class=\"detection-display-empty\">暂未选择任何对象，请从下方列表中选择</div>`\n                : Array.from(selectedDetectionTargets)\n                    .map(targetName => {\n                      const target = availableTargets.find(t => t.name === targetName);\n                      if (!target) return '';\n                      return `\n                      <div class=\"detection-display-item\">\n                        <div class=\"detection-display-item-header\">\n                          <span class=\"detection-display-item-name\">${target.name}</span>\n                          <span class=\"detection-display-item-category\">${target.category}</span>\n                          <button class=\"detection-display-item-remove\" data-remove-target=\"${target.name}\">×</button>\n                        </div>\n                        <div class=\"detection-display-item-info\">${target.info}</div>\n      </div>\n    `;\n                    })\n                    .join('')\n            }\n          </div>\n        </div>\n        \n        <div class=\"detection-description\">\n          💡 提示：点击下方卡片选择对象（建议3个以下），侦测将包括：整体情况、神情、嘴部、胸部、乳头、乳晕、屁股、小穴、屁眼等详细数据\n        </div>\n        \n        <div class=\"detection-targets-grid\">\n  `;\n\n  availableTargets.forEach(target => {\n    const isSelected = selectedDetectionTargets.has(target.name);\n    html += `\n      <div class=\"detection-target-item ${isSelected ? 'selected' : ''}\" data-target-name=\"${target.name}\">\n        <div class=\"detection-target-header\">\n          <span class=\"detection-target-name\">${target.name}</span>\n          <span class=\"detection-target-category\">${target.category}</span>\n        </div>\n        <div class=\"detection-target-info\">${target.info}</div>\n        <div class=\"detection-target-status\">${isSelected ? '✓ 已选择' : '点击选择'}</div>\n      </div>\n    `;\n  });\n\n  html += `\n        </div>\n        \n        <div class=\"detection-actions\">\n          <button class=\"detection-action-btn\" id=\"detection-start-btn\" ${selectedDetectionTargets.size === 0 ? 'disabled' : ''}>\n            🔍 开始侦测\n          </button>\n          <button class=\"detection-action-btn detection-remove-btn\" id=\"detection-remove-btn\" ${selectedDetectionTargets.size === 0 ? 'disabled' : ''}>\n            🗑️ 删除侦测数据\n          </button>\n        </div>\n      </div>\n    </div>\n  `;\n\n  return html;\n}\n\n// ==================== 初始化侦测页面事件 ====================\nfunction initializeDetectionEvents(targetDoc: Document): void {\n  console.log('🔧 初始化侦测页面事件，当前选中对象:', selectedDetectionTargets);\n\n  // 侦测结果展开/收起事件\n  const resultItems = targetDoc.querySelectorAll('.detection-result-item');\n  resultItems.forEach(item => {\n    item.addEventListener('click', function (e) {\n      e.stopPropagation();\n      const dataElement = (this as HTMLElement).querySelector('.detection-result-data');\n      if (dataElement) {\n        dataElement.classList.toggle('expanded');\n      }\n    });\n  });\n\n  // 目标选择事件\n  const targetItems = targetDoc.querySelectorAll('.detection-target-item');\n  console.log('🎯 找到目标卡片数量:', targetItems.length);\n  targetItems.forEach(item => {\n    item.addEventListener('click', function (e) {\n      e.stopPropagation();\n      const targetName = (this as HTMLElement).getAttribute('data-target-name');\n      console.log('👆 点击了卡片:', targetName);\n      if (!targetName) return;\n\n      if (selectedDetectionTargets.has(targetName)) {\n        selectedDetectionTargets.delete(targetName);\n        console.log('➖ 取消选择:', targetName);\n      } else {\n        if (selectedDetectionTargets.size >= 3) {\n          alert('建议最多选择3个对象进行侦测');\n          return;\n        }\n        selectedDetectionTargets.add(targetName);\n        console.log('➕ 添加选择:', targetName);\n      }\n\n      console.log('📊 更新后的选中对象:', selectedDetectionTargets);\n      // 重新渲染页面\n      if (cachedMVUData) {\n        renderNightclubData(targetDoc, cachedMVUData);\n      }\n    });\n  });\n\n  // 清空选择按钮\n  const clearAllBtn = targetDoc.getElementById('detection-clear-all');\n  if (clearAllBtn) {\n    clearAllBtn.addEventListener('click', e => {\n      e.stopPropagation();\n      console.log('🗑️ 清空所有选择');\n      selectedDetectionTargets.clear();\n      if (cachedMVUData) {\n        renderNightclubData(targetDoc, cachedMVUData);\n      }\n    });\n  }\n\n  // 移除单个对象按钮\n  const removeButtons = targetDoc.querySelectorAll('.detection-display-item-remove');\n  removeButtons.forEach(btn => {\n    btn.addEventListener('click', function (e) {\n      e.stopPropagation();\n      const targetName = (this as HTMLElement).getAttribute('data-remove-target');\n      console.log('❌ 移除单个对象:', targetName);\n      if (targetName && selectedDetectionTargets.has(targetName)) {\n        selectedDetectionTargets.delete(targetName);\n        if (cachedMVUData) {\n          renderNightclubData(targetDoc, cachedMVUData);\n        }\n      }\n    });\n  });\n\n  // 开始侦测按钮\n  const startBtn = targetDoc.getElementById('detection-start-btn');\n  if (startBtn) {\n    startBtn.addEventListener('click', () => {\n      if (selectedDetectionTargets.size === 0) return;\n\n      const targets = Array.from(selectedDetectionTargets);\n      let command = `request: 本回合不要输出正文内容！！！\\n\\n对以下对象进行详细身体数据侦测：`;\n\n      targets.forEach((target, index) => {\n        command += `【${target}】`;\n        if (index < targets.length - 1) {\n          command += `、`;\n        }\n      });\n\n      command += `\\n\\n请侦测以下部位（每个部位描述后用换行符分割）：1. 整体情况 2. 神情 3. 嘴部 4. 胸部 5. 乳头 6. 乳晕 7. 屁股 8. 小穴 9. 屁眼\\n\\n`;\n\n      targets.forEach((target, index) => {\n        command += `_.set('侦测数据.${target}[0]', '侦测数据', '整体情况：...\\\\n神情：...\\\\n嘴部：...\\\\n胸部：...\\\\n乳头：...\\\\n乳晕：...\\\\n屁股：...\\\\n小穴：...\\\\n屁眼：...')`;\n        if (index < targets.length - 1) {\n          command += `\\n`;\n        }\n      });\n\n      fillCommand(command);\n    });\n  }\n\n  // 删除侦测数据按钮\n  const removeBtn = targetDoc.getElementById('detection-remove-btn');\n  if (removeBtn) {\n    removeBtn.addEventListener('click', () => {\n      if (selectedDetectionTargets.size === 0) return;\n\n      const targets = Array.from(selectedDetectionTargets);\n      let command = `删除以下对象的侦测数据：\\n\\n`;\n\n      targets.forEach(target => {\n        command += `_.remove('侦测数据', '${target}')\\n`;\n      });\n\n      fillCommand(command);\n\n      // 清空选择\n      selectedDetectionTargets.clear();\n      if (cachedMVUData) {\n        renderNightclubData(targetDoc, cachedMVUData);\n      }\n    });\n  }\n}\n\n// 填充命令到输入框\nfunction fillCommand(command: string): void {\n  try {\n    const chatInput = (parent.document || document).querySelector('#send_textarea') as HTMLTextAreaElement;\n    if (chatInput) {\n      if (chatInput.value.trim() !== '') {\n        chatInput.value += '\\n\\n' + command;\n      } else {\n        chatInput.value = command;\n      }\n      chatInput.focus();\n      console.log('✅ 命令已填充到输入框');\n    } else {\n      throw new Error('未找到输入框');\n    }\n  } catch (e) {\n    alert('未能自动找到输入框，请手动复制命令：\\n\\n' + command);\n    console.error('填充命令失败:', e);\n  }\n}\n\n// ==================== 启动脚本 ====================\n// 等待 jQuery 加载完成\nfunction waitForJQuery(callback: () => void): void {\n  if (typeof jQuery !== 'undefined' || typeof $ !== 'undefined') {\n    console.log('✅ jQuery 已就绪');\n    callback();\n  } else {\n    console.log('⏳ 等待 jQuery...');\n    setTimeout(() => waitForJQuery(callback), 100);\n  }\n}\n\n// 使用 jQuery 的方式初始化（符合项目规范，不使用 DOMContentLoaded）\nwaitForJQuery(() => {\n  $(() => {\n    console.log('✅ 开始初始化江畔夜总会状态栏');\n    initializeNightclubPlugin();\n  });\n});\n\nconsole.log('✅ 江畔夜总会状态栏插件脚本加载完成');\n\n// 导出一个值以使其成为合法的ES Module，支持通过import语句加载\nexport const __initialized__ = true;\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","console","log","btnDragData","panelDragData","cachedMVUData","currentRetry","currentPage","selectedDetectionTargets","Set","safeGet","data","path","defaultValue","keys","split","current","String","initializeNightclubPlugin","targetDoc","window","top","document","e","warn","getElementById","remove","$","off","head","insertAdjacentHTML","body","btn","saved","localStorage","getItem","pos","JSON","parse","style","left","panel","$targetDoc","handleBtnDragStart","clientX","clientY","computedStyle","getComputedStyle","currentLeft","parseInt","currentTop","startX","startY","initialLeft","initialTop","hasDragged","handleBtnDragMove","deltaX","deltaY","Math","abs","classList","add","targetWindow","newLeft","newTop","maxX","width","maxY","height","max","min","handleBtnDragEnd","wasDragged","position","setItem","stringify","isActive","contains","loadNightclubData","togglePanel","on","preventDefault","stopPropagation","addEventListener","touch","touches","passive","originalEvent","changedTouches","initializeButtonDrag","closeBtn","tabs","querySelectorAll","forEach","tab","page","this","getAttribute","t","renderNightclubData","initializeTabSwitching","header","parentElement","test","navigator","userAgent","restorePanelPosition","innerWidth","innerHeight","transform","handlePanelDragStart","rect","getBoundingClientRect","handlePanelDragMove","panelWidth","offsetWidth","offsetHeight","viewportWidth","viewportHeight","handlePanelDragEnd","target","closest","initializePanelDrag","initializePanelSystem","async","Mvu","parent","Error","setTimeout","showError","mvuResult","getMvuData","type","message_id","stat_data","error","message","contentDiv","innerHTML","timeDisplay","dateText","timeText","statusText","locationText","textContent","ordersCount","length","traineesCount","archivedCount","detectionCount","workshopBadge","traineesBadge","archivedBadge","detectionBadge","html","renderClubPage","orders","order","orderNum","client","requirements","deadline","status","renderWorkshopPage","trainees","trainee","name","code","age","origin","appearance","days","progress","renderTraineesPage","archived","artist","features","currentStatus","evaluation","renderArchivedPage","detectionData","formatDetectionText","text","replace","availableTargets","push","category","info","entries","map","detectionText","join","size","Array","from","targetName","find","isSelected","has","renderDetectionPage","resultItems","item","dataElement","querySelector","toggle","targetItems","delete","alert","clearAllBtn","clear","removeButtons","startBtn","targets","command","index","fillCommand","removeBtn","initializeDetectionEvents","chatInput","value","trim","focus","waitForJQuery","callback","jQuery","__initialized__"],"sourceRoot":""}