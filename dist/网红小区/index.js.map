{"version":3,"file":"index.js","mappings":"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","sources":["src://tavern_helper_template/src/网红小区/index.ts"],"sourcesContent":["/* 网红小区 - 公寓管理悬浮界面 */\n\ntype AnyObject = Record<string, any>;\n\ninterface TenantData {\n  年龄?: number | string;\n  外貌?: string;\n  职业?: string;\n  性格?: string;\n  恋情?: string;\n  内心?: string;\n  状态?: string;\n  穿搭?: string;\n  好感度?: number | string;\n  性欲?: number | string;\n  入住日期?: string;\n  入住天数?: number | string;\n  月租金?: number | string;\n  本月已缴租?: boolean | string;\n  当前位置?: string;\n  创作内容?: string;\n  关系?: Record<string, any>;\n}\n\nfunction safeGetValue(obj: AnyObject | undefined, path: string, defaultValue: string = ''): string {\n  if (!obj) return defaultValue;\n  const keys = path.split('.');\n  let current: any = obj;\n  for (const key of keys) {\n    if (current === undefined || current === null) return defaultValue;\n    // 先解包 MVU 数组格式\n    if (Array.isArray(current)) {\n      current = current[0];\n    }\n    if (typeof current !== 'object' || !Object.prototype.hasOwnProperty.call(current, key)) {\n      return defaultValue;\n    }\n    current = current[key];\n  }\n  // 最后解包 MVU 数组格式\n  if (Array.isArray(current)) return current.length > 0 ? String(current[0] ?? defaultValue) : defaultValue;\n  if (current === undefined || current === null) return defaultValue;\n  return String(current);\n}\n\nfunction countTenants(data: AnyObject | undefined): number {\n  const tenantMap = data?.租客列表?.[0];\n  if (!tenantMap || typeof tenantMap !== 'object') return 0;\n  return Object.keys(tenantMap).filter(k => k !== '$meta').length;\n}\n\nfunction countBedrooms(data: AnyObject | undefined): number {\n  const rooms = data?.公寓?.房间列表?.[0];\n  if (!rooms || typeof rooms !== 'object') return 0;\n  let total = 0;\n  for (const k in rooms) {\n    if (k === '$meta') continue;\n    const room = rooms[k];\n    const type = safeGetValue(room, '类型', '');\n    if (type === '卧室') total += 1;\n  }\n  return total;\n}\n\nasync function waitForMvu(): Promise<void> {\n  try {\n    // @ts-ignore 全局可用\n    if (typeof waitGlobalInitialized === 'function') {\n      // @ts-ignore 全局可用\n      await waitGlobalInitialized('Mvu');\n      return;\n    }\n  } catch {}\n  // 兜底轮询\n  await new Promise<void>(resolve => {\n    const timer = setInterval(() => {\n      // @ts-ignore 全局可用\n      if (typeof Mvu !== 'undefined') {\n        clearInterval(timer);\n        resolve();\n      }\n    }, 300);\n  });\n}\n\nasync function loadMvuData(): Promise<AnyObject | null> {\n  try {\n    await waitForMvu();\n    // @ts-ignore 全局可用\n    const res = Mvu.getMvuData({ type: 'message', message_id: 'latest' });\n    return res?.stat_data ?? null;\n  } catch {\n    return null;\n  }\n}\n\nfunction getTargetDoc(): Document {\n  try {\n    return window.top ? window.top.document : document;\n  } catch {\n    return document;\n  }\n}\n\nfunction ensureStyles(targetDoc: Document): void {\n  const id = 'ngq-floating-styles';\n  if (targetDoc.getElementById(id)) return;\n  const style = targetDoc.createElement('style');\n  style.id = id;\n  style.textContent = `\n  :root{--apt-primary:#ff6b9d;--apt-secondary:#c44569;--apt-bg:#1a1a2e;--apt-card:#16213e;--apt-border:rgba(255,107,157,.2);--apt-text:#e8eaf6;--apt-dim:#9ca3af}\n  .ngq-float-btn{position:fixed;bottom:96px;right:24px;width:60px;height:60px;border-radius:50%;background:linear-gradient(135deg,#ff6b9d 0%,#c44569 100%);\n    color:#fff;display:flex;align-items:center;justify-content:center;box-shadow:0 6px 20px rgba(255,107,157,.4);cursor:pointer;z-index:10002;border:3px solid rgba(255,255,255,.3);\n    font-size:26px;pointer-events:auto;transition:transform .2s,box-shadow .2s}\n  .ngq-float-btn:hover{transform:scale(1.05)}\n  .ngq-float-btn.dragging{cursor:grabbing;opacity:.9;transition:none}\n  .ngq-panel{position:fixed;left:50vw;top:50vh;transform:translate(-50%,-50%);width:90vw;max-width:900px;height:85vh;max-height:650px;background:var(--apt-bg);\n    color:var(--apt-text);border-radius:16px;box-shadow:0 8px 32px rgba(0,0,0,.4);z-index:10001;overflow:hidden;border:2px solid var(--apt-primary);display:none;flex-direction:column}\n  .ngq-panel.open{display:flex}\n  .ngq-panel.dragging{transition:none}\n  .ngq-panel-header{padding:14px 18px;background:linear-gradient(135deg,#ff6b9d 0%,#c44569 100%);font-weight:700;font-size:15px;display:flex;justify-content:space-between;\n    align-items:center;color:#fff;cursor:move;user-select:none;box-shadow:0 2px 8px rgba(0,0,0,.2)}\n  .ngq-panel-header.dragging{opacity:.8;cursor:grabbing}\n  .ngq-close-btn{background:transparent;border:none;color:#fff;font-size:28px;cursor:pointer;line-height:1;padding:0;width:28px;height:28px;display:flex;\n    align-items:center;justify-content:center;transition:transform .2s}\n  .ngq-close-btn:hover{transform:scale(1.1)}\n  .ngq-tabs{display:flex;flex-shrink:0;border-bottom:2px solid rgba(255,255,255,.1)}\n  .ngq-tab{flex:1;padding:10px 14px;background:transparent;border:none;color:rgba(255,255,255,.6);font-size:13px;cursor:pointer;transition:all .3s;\n    border-bottom:2px solid transparent;text-align:center}\n  .ngq-tab:hover{background:rgba(255,255,255,.05);color:rgba(255,255,255,.9)}\n  .ngq-tab.active{color:var(--apt-primary);border-bottom-color:var(--apt-primary)}\n  .ngq-tab-badge{display:inline-block;margin-left:6px;padding:2px 6px;background:var(--apt-primary);border-radius:10px;font-size:10px;font-weight:700;color:#fff}\n  .ngq-content{flex:1;padding:16px;overflow-y:auto;-webkit-overflow-scrolling:touch;min-height:0}\n  .ngq-content::-webkit-scrollbar{width:8px;height:8px}\n  .ngq-content::-webkit-scrollbar-track{background:rgba(255,255,255,.05);border-radius:4px}\n  .ngq-content::-webkit-scrollbar-thumb{background:var(--apt-primary);border-radius:4px}\n  .ngq-content::-webkit-scrollbar-thumb:hover{background:var(--apt-secondary)}\n  .ngq-card{background:var(--apt-card);border:1px solid var(--apt-border);border-radius:10px;margin-bottom:14px;overflow:hidden}\n  .ngq-card-title{display:flex;align-items:center;gap:8px;padding:12px 16px;background:rgba(255,107,157,.15);font-weight:600;font-size:14px}\n  .ngq-card-body{padding:14px}\n  .ngq-info-row{display:flex;justify-content:space-between;align-items:center;padding:8px 0;border-bottom:1px solid rgba(255,255,255,.05)}\n  .ngq-info-row:last-child{border-bottom:none}\n  .ngq-info-label{color:var(--apt-dim);font-size:13px}\n  .ngq-info-value{color:var(--apt-text);font-weight:500;text-align:right}\n  .ngq-btn{padding:10px 16px;background:var(--apt-primary);color:#fff;border:none;border-radius:8px;cursor:pointer;font-size:13px;font-weight:600;transition:all .3s}\n  .ngq-btn:hover{background:var(--apt-secondary);transform:translateY(-1px);box-shadow:0 4px 12px rgba(255,107,157,.3)}\n  .ngq-btn:disabled{background:#555;cursor:not-allowed;opacity:.4}\n  .ngq-actions{display:flex;gap:10px;margin-top:12px}\n  .ngq-floor-level{background:var(--apt-card);border:1px solid var(--apt-border);border-radius:12px;padding:15px;margin-bottom:14px;box-shadow:0 4px 12px rgba(0,0,0,.06)}\n  .ngq-floor-level-title{font-size:1.1em;font-weight:600;margin-bottom:12px;color:var(--apt-text);display:flex;align-items:center;gap:8px}\n  .ngq-floor-grid{display:flex;gap:12px;width:100%}\n  .ngq-room-card{flex:1;border-radius:10px;padding:18px 12px;min-height:90px;display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;font-weight:600;font-size:.9em;border:2px solid rgba(255,255,255,.3);box-shadow:0 2px 8px rgba(0,0,0,.08);cursor:pointer;transition:all .2s}\n  .ngq-room-card:hover{transform:translateY(-2px);box-shadow:0 4px 12px rgba(255,107,157,.3)}\n  .ngq-room-card.bedroom{background:#592e39}\n  .ngq-room-card.functional{background:#2e4057}\n  .ngq-room-card.your{background:#2e5266;border-color:#5dade2}\n  .ngq-room-card.empty{background:#3d3f47;opacity:.6}\n  .ngq-room-name{font-weight:bold;font-size:.95em}\n  .ngq-room-occupant{font-size:.75em;color:var(--apt-dim);margin-top:4px}\n  .ngq-tenant-card{background:rgba(255,255,255,.05);border:1px solid var(--apt-border);border-radius:8px;padding:12px;margin-bottom:10px;transition:all .3s;cursor:pointer}\n  .ngq-tenant-card:hover{border-color:var(--apt-primary);background:rgba(255,107,157,.1);transform:translateX(3px)}\n  .ngq-tenant-header{display:flex;justify-content:space-between;align-items:center;margin-bottom:8px}\n  .ngq-tenant-name{font-weight:600;font-size:14px;color:var(--apt-primary)}\n  .ngq-tenant-badge{font-size:11px;padding:2px 8px;background:rgba(255,255,255,.2);border-radius:4px}\n  .ngq-tenant-actions{margin-bottom:16px;text-align:center}\n  .ngq-empty{text-align:center;padding:40px 20px;color:var(--apt-dim)}\n  .ngq-empty-icon{font-size:48px;margin-bottom:12px;opacity:.5}\n  @media(max-width:768px){.ngq-panel{width:95vw;height:90vh}.ngq-float-btn{width:56px;height:56px;font-size:24px}.ngq-tab{font-size:11px;padding:8px 10px}}\n  @media(max-width:480px){.ngq-panel{width:100vw;height:100vh;max-width:none;max-height:none;border-radius:0;border:none}.ngq-float-btn{width:52px;height:52px;font-size:22px}}\n  `;\n  targetDoc.head.appendChild(style);\n}\n\nfunction mountUI(targetDoc: Document): { refresh: () => void } {\n  ensureStyles(targetDoc);\n  const existing = targetDoc.getElementById('ngq-floating-root');\n  if (existing) existing.remove();\n\n  const root = targetDoc.createElement('div');\n  root.id = 'ngq-floating-root';\n  targetDoc.body.appendChild(root);\n\n  const btn = targetDoc.createElement('button');\n  btn.className = 'ngq-float-btn';\n  btn.id = 'ngq-float-btn';\n  btn.title = '网红小区 - 公寓管理';\n  btn.textContent = '🏠';\n\n  const panel = targetDoc.createElement('div');\n  panel.className = 'ngq-panel';\n  panel.id = 'ngq-panel';\n  panel.innerHTML = `\n    <div class=\"ngq-panel-header\" id=\"ngq-drag-handle\">\n      <div><div style=\"font-size:16px;font-weight:700\">🏠 网红小区</div><div style=\"font-size:11px;opacity:.9\" id=\"ngq-header-subtitle\">东海市·荟萃城</div></div>\n      <button class=\"ngq-close-btn\" id=\"ngq-close\">×</button>\n    </div>\n    <div class=\"ngq-tabs\">\n      <button class=\"ngq-tab active\" data-tab=\"floors\">🏢 楼层<span id=\"ngq-tab-floors-badge\" class=\"ngq-tab-badge\">0</span></button>\n      <button class=\"ngq-tab\" data-tab=\"tenants\">👥 租客<span id=\"ngq-tab-tenants-badge\" class=\"ngq-tab-badge\">0</span></button>\n      <button class=\"ngq-tab\" data-tab=\"events\">📜 事件<span id=\"ngq-tab-events-badge\" class=\"ngq-tab-badge\">0</span></button>\n      <button class=\"ngq-tab\" data-tab=\"actions\">⚙️ 操作</button>\n    </div>\n    <div class=\"ngq-content\" id=\"ngq-content\">\n      <div class=\"ngq-empty\"><div class=\"ngq-empty-icon\">⏳</div><div>正在加载数据...</div></div>\n    </div>\n  `;\n\n  root.appendChild(btn);\n  root.appendChild(panel);\n\n  // 拖动数据\n  let dragData: { startX: number; startY: number; initialLeft: number; initialTop: number } | null = null;\n  let moved = false;\n\n  // 工具：读取/保存位置（使用 localStorage，键含命名空间）\n  const STORAGE_KEY = 'ngq-floating-btn-position';\n  try {\n    const saved = localStorage.getItem(STORAGE_KEY);\n    if (saved) {\n      const pos = JSON.parse(saved);\n      btn.style.left = typeof pos.left === 'number' ? pos.left + 'px' : btn.style.left;\n      btn.style.top = typeof pos.top === 'number' ? pos.top + 'px' : btn.style.top;\n      // 将定位从默认 bottom/right 转换为具体 left/top 后，避免双定位冲突\n      btn.style.right = 'auto';\n      btn.style.bottom = 'auto';\n    }\n  } catch {}\n\n  function handleStart(clientX: number, clientY: number): void {\n    const rect = btn.getBoundingClientRect();\n    // 如果初始是通过 bottom/right 定位，则转化为 left/top\n    const computed = targetDoc.defaultView?.getComputedStyle(btn);\n    if (computed) {\n      if (computed.right !== 'auto' || computed.bottom !== 'auto') {\n        btn.style.left = rect.left + 'px';\n        btn.style.top = rect.top + 'px';\n        btn.style.right = 'auto';\n        btn.style.bottom = 'auto';\n      }\n    }\n    dragData = { startX: clientX, startY: clientY, initialLeft: rect.left, initialTop: rect.top };\n    moved = false;\n    btn.classList.add('dragging');\n  }\n\n  function handleMove(clientX: number, clientY: number): void {\n    if (!dragData) return;\n    const deltaX = clientX - dragData.startX;\n    const deltaY = clientY - dragData.startY;\n    if (!moved && (Math.abs(deltaX) > 3 || Math.abs(deltaY) > 3)) moved = true;\n    const newLeft = dragData.initialLeft + deltaX;\n    const newTop = dragData.initialTop + deltaY;\n    btn.style.left = newLeft + 'px';\n    btn.style.top = newTop + 'px';\n  }\n\n  function handleEnd(): void {\n    if (!dragData) return;\n    btn.classList.remove('dragging');\n    // 保存位置\n    try {\n      const rect = btn.getBoundingClientRect();\n      localStorage.setItem(STORAGE_KEY, JSON.stringify({ left: rect.left, top: rect.top }));\n    } catch {}\n    dragData = null;\n  }\n\n  // 事件绑定（顶层文档）\n  btn.addEventListener('mousedown', e => {\n    e.preventDefault();\n    handleStart(e.clientX, e.clientY);\n  });\n  targetDoc.addEventListener('mousemove', e => {\n    if (dragData) {\n      e.preventDefault();\n      handleMove(e.clientX, e.clientY);\n    }\n  });\n  targetDoc.addEventListener('mouseup', () => {\n    if (dragData) handleEnd();\n  });\n\n  btn.addEventListener(\n    'touchstart',\n    e => {\n      const t = e.touches[0];\n      if (!t) return;\n      handleStart(t.clientX, t.clientY);\n    },\n    { passive: true },\n  );\n  targetDoc.addEventListener(\n    'touchmove',\n    e => {\n      const t = e.touches[0];\n      if (!t) return;\n      if (dragData) handleMove(t.clientX, t.clientY);\n    },\n    { passive: false },\n  );\n  targetDoc.addEventListener('touchend', () => {\n    if (dragData) handleEnd();\n  });\n\n  // 点击（仅在未发生拖动时触发）\n  btn.addEventListener('click', e => {\n    if (moved) {\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n    panel.classList.toggle('open');\n  });\n  (targetDoc.getElementById('ngq-close') as HTMLButtonElement).onclick = e => {\n    e.stopPropagation();\n    panel.classList.remove('open');\n  };\n\n  // 面板拖动（通过标题作为把手）\n  (() => {\n    const handle = targetDoc.getElementById('ngq-drag-handle');\n    if (!handle) return;\n    let pDrag: { startX: number; startY: number; left: number; top: number } | null = null;\n\n    function getPanelRect() {\n      return panel.getBoundingClientRect();\n    }\n    function startPanelDrag(x: number, y: number) {\n      // 将 transform 定位转为 left/top 以便拖动\n      const rect = getPanelRect();\n      panel.style.transform = 'none';\n      panel.style.left = rect.left + 'px';\n      panel.style.top = rect.top + 'px';\n      pDrag = { startX: x, startY: y, left: rect.left, top: rect.top };\n    }\n    function movePanelDrag(x: number, y: number) {\n      if (!pDrag) return;\n      const nx = pDrag.left + (x - pDrag.startX);\n      const ny = pDrag.top + (y - pDrag.startY);\n      panel.style.left = nx + 'px';\n      panel.style.top = ny + 'px';\n    }\n    function endPanelDrag() {\n      pDrag = null;\n    }\n\n    handle.addEventListener('mousedown', e => {\n      e.preventDefault();\n      startPanelDrag(e.clientX, e.clientY);\n    });\n    targetDoc.addEventListener('mousemove', e => {\n      if (pDrag) {\n        e.preventDefault();\n        movePanelDrag(e.clientX, e.clientY);\n      }\n    });\n    targetDoc.addEventListener('mouseup', () => {\n      if (pDrag) endPanelDrag();\n    });\n    handle.addEventListener(\n      'touchstart',\n      e => {\n        const t = e.touches[0];\n        if (!t) return;\n        startPanelDrag(t.clientX, t.clientY);\n      },\n      { passive: true },\n    );\n    targetDoc.addEventListener(\n      'touchmove',\n      e => {\n        const t = e.touches[0];\n        if (!t) return;\n        if (pDrag) movePanelDrag(t.clientX, t.clientY);\n      },\n      { passive: false },\n    );\n    targetDoc.addEventListener('touchend', () => {\n      if (pDrag) endPanelDrag();\n    });\n  })();\n\n  let lastData: AnyObject | null = null;\n  let currentTab: string = 'floors';\n\n  async function refresh() {\n    const data = await loadMvuData();\n    lastData = data;\n    updateHeaderInfo(data);\n    renderCurrentTab();\n  }\n\n  function updateHeaderInfo(data: AnyObject | null) {\n    const subtitle = targetDoc.getElementById('ngq-header-subtitle');\n    if (subtitle && data) {\n      const date =\n        `${safeGetValue(data, '世界.年份', '')} ${safeGetValue(data, '世界.日期', '')} ${safeGetValue(data, '世界.星期', '')}`.trim();\n      const time = safeGetValue(data, '世界.时间', '');\n      const location = safeGetValue(data, '世界.地点', '东海市·荟萃城');\n      subtitle.textContent = `${location} | ${date} ${time}`;\n    }\n    // 更新徽标\n    const floors = lastData?.公寓?.楼层配置 ? Object.keys(lastData.公寓.楼层配置).filter(k => k !== '$meta').length : 0;\n    const tenants = countTenants(lastData || undefined);\n    const events = lastData?.事件历史?.[0]\n      ? (lastData.事件历史[0] as any[]).filter(v => v !== '$__META_EXTENSIBLE__$').length\n      : 0;\n    const setBadge = (id: string, val: number) => {\n      const el = targetDoc.getElementById(id);\n      if (el) el.textContent = String(val);\n    };\n    setBadge('ngq-tab-floors-badge', floors);\n    setBadge('ngq-tab-tenants-badge', tenants);\n    setBadge('ngq-tab-events-badge', events);\n  }\n\n  function renderCurrentTab() {\n    const content = targetDoc.getElementById('ngq-content');\n    if (!content) return;\n    let html = '';\n    if (currentTab === 'floors') html = renderFloors();\n    else if (currentTab === 'tenants') html = renderTenants();\n    else if (currentTab === 'events') html = renderEvents();\n    else if (currentTab === 'actions') html = renderActions();\n    content.innerHTML = html;\n    initTabEvents();\n  }\n\n  // 标签切换\n  (() => {\n    const tabs = Array.from(targetDoc.querySelectorAll('.ngq-tab')) as HTMLButtonElement[];\n    tabs.forEach(tab =>\n      tab.addEventListener('click', e => {\n        e.stopPropagation();\n        const which = tab.getAttribute('data-tab');\n        if (!which) return;\n        tabs.forEach(t => t.classList.remove('active'));\n        tab.classList.add('active');\n        currentTab = which;\n        renderCurrentTab();\n      }),\n    );\n  })();\n\n  function renderSingleFloor(floor: any, rooms: any): string {\n    let html = `<div class=\"ngq-floor-level\">`;\n    html += `<div class=\"ngq-floor-level-title\">🏢 ${floor.name}</div>`;\n    html += `<div class=\"ngq-floor-grid\">`;\n\n    // 找到该楼层的所有房间，并按房间名排序\n    const floorRooms: Array<{ name: string; type: string; tenant: string }> = [];\n    const roomKeys = Object.keys(rooms).filter(k => k !== '$meta');\n\n    roomKeys.forEach(roomKey => {\n      const r = rooms[roomKey];\n      const layout = r?.布局;\n      if (!layout || typeof layout !== 'object') return;\n\n      const floorName = typeof layout.楼层 === 'string' ? layout.楼层 : String(layout.楼层 || '');\n      if (floorName !== floor.name) return;\n\n      const type = safeGetValue(r, '类型', '空房间');\n      const tenant = safeGetValue(r, '住户', '未知');\n      floorRooms.push({ name: roomKey, type, tenant });\n    });\n\n    // 按房间名排序（如 101, 102）\n    floorRooms.sort((a, b) => a.name.localeCompare(b.name));\n\n    if (floorRooms.length === 0) {\n      html += `<div style=\"padding:20px;text-align:center;color:var(--apt-dim)\">该楼层暂无房间</div>`;\n      html += `</div></div>`;\n      return html;\n    }\n\n    // 渲染房间卡片（对称布局，每个房间占据相等宽度）\n    floorRooms.forEach(room => {\n      const cls =\n        room.type === '您的房间'\n          ? 'your'\n          : room.type === '卧室'\n            ? 'bedroom'\n            : room.type === '功能性房间'\n              ? 'functional'\n              : 'empty';\n      const tenantDisplay = room.tenant === '<user>' ? '房东' : room.tenant === '未知' ? '' : room.tenant;\n      const roomIcon =\n        room.type === '您的房间' ? '👑' : room.type === '卧室' ? '🛏️' : room.type === '功能性房间' ? '🎨' : '🏚️';\n\n      html += `<div class=\"ngq-room-card ${cls}\" data-room=\"${room.name}\">`;\n      html += `<div class=\"ngq-room-name\">${roomIcon} ${room.name}</div>`;\n      if (room.type === '卧室' && tenantDisplay) {\n        html += `<div class=\"ngq-room-occupant\">入住: ${tenantDisplay}</div>`;\n      } else if (room.type === '卧室') {\n        html += `<div class=\"ngq-room-occupant\">(空)</div>`;\n      } else if (room.type === '您的房间') {\n        html += `<div class=\"ngq-room-occupant\">房东自住</div>`;\n      }\n      html += `</div>`;\n    });\n\n    html += `</div></div>`;\n    return html;\n  }\n\n  function renderFloors(): string {\n    if (!lastData) {\n      return '<div class=\"ngq-empty\"><div class=\"ngq-empty-icon\">📭</div><div>暂无数据</div></div>';\n    }\n\n    const cfg = lastData?.公寓?.楼层配置 || {};\n    const rooms = (lastData?.公寓?.房间列表 && lastData.公寓.房间列表[0]) || {};\n\n    // 获取所有楼层（已排序，从上到下）\n    const floors = Object.keys(cfg)\n      .filter(k => k !== '$meta')\n      .map(k => ({\n        key: k,\n        order: parseFloat(safeGetValue(cfg[k], '顺序', '0')) || 0,\n        name: safeGetValue(cfg[k], '显示名称', k),\n        capacity: safeGetValue(cfg[k], '总容量', '10'),\n      }))\n      .sort((a, b) => b.order - a.order);\n\n    if (floors.length === 0) {\n      return '<div class=\"ngq-empty\"><div class=\"ngq-empty-icon\">🏗️</div><div>未找到楼层数据</div></div>';\n    }\n\n    let html = '<div style=\"display:flex;flex-direction:column;gap:12px\">';\n\n    floors.forEach(floor => {\n      html += renderSingleFloor(floor, rooms);\n    });\n\n    html += '</div>';\n    return html;\n  }\n\n  function renderTenants(): string {\n    if (!lastData) return '<div class=\"ngq-empty\"><div class=\"ngq-empty-icon\">📭</div><div>暂无数据</div></div>';\n    const map = (lastData?.租客列表 && lastData.租客列表[0]) || {};\n    const names = Object.keys(map).filter(k => k !== '$meta');\n\n    let html = '';\n\n    // 顶部操作栏：招募租客按钮\n    html += `<div class=\"ngq-tenant-actions\">`;\n    html += `<button class=\"ngq-btn\" data-action=\"recruit\">👤 招募租客</button>`;\n    html += `</div>`;\n\n    if (names.length === 0) {\n      html +=\n        '<div class=\"ngq-empty\"><div class=\"ngq-empty-icon\">👥</div><div>暂无租客，点击上方按钮招募新租客</div></div>';\n      return html;\n    }\n\n    // 租客列表\n    names.forEach(name => {\n      const t: TenantData = map[name];\n      const favor = safeGetValue(t, '好感度', '0');\n      const lust = safeGetValue(t, '性欲', '0');\n      const age = safeGetValue(t, '年龄', '-');\n      const job = safeGetValue(t, '职业', '-');\n      const place = safeGetValue(t, '当前位置', '-');\n      const status = safeGetValue(t, '状态', '-');\n      const mood = safeGetValue(t, '内心', '-');\n      const appearance = safeGetValue(t, '外貌', '-');\n      const personality = safeGetValue(t, '性格', '-');\n      const love = safeGetValue(t, '恋情', '单身');\n      const rent = safeGetValue(t, '月租金', '-');\n      const days = safeGetValue(t, '入住天数', '0');\n      const paid = safeGetValue(t, '本月已缴租', 'false') === 'true';\n\n      html += `<div class=\"ngq-tenant-card\"><div class=\"ngq-tenant-header\"><span class=\"ngq-tenant-name\">${name}</span><span class=\"ngq-tenant-badge\">${age}岁 ${job}</span></div>`;\n      html += `<div class=\"ngq-info-row\"><span class=\"ngq-info-label\">外貌</span><span class=\"ngq-info-value\">${appearance}</span></div>`;\n      html += `<div class=\"ngq-info-row\"><span class=\"ngq-info-label\">性格</span><span class=\"ngq-info-value\">${personality}</span></div>`;\n      html += `<div class=\"ngq-info-row\"><span class=\"ngq-info-label\">恋情</span><span class=\"ngq-info-value\">${love}</span></div>`;\n      html += `<div class=\"ngq-info-row\"><span class=\"ngq-info-label\">当前位置</span><span class=\"ngq-info-value\">${place}</span></div>`;\n      html += `<div class=\"ngq-info-row\"><span class=\"ngq-info-label\">状态</span><span class=\"ngq-info-value\">${status}</span></div>`;\n      html += `<div class=\"ngq-info-row\"><span class=\"ngq-info-label\">内心</span><span class=\"ngq-info-value\">${mood}</span></div>`;\n      html += `<div class=\"ngq-info-row\"><span class=\"ngq-info-label\">好感度</span><span class=\"ngq-info-value\">${favor}</span></div>`;\n      html += `<div class=\"ngq-info-row\"><span class=\"ngq-info-label\">性欲</span><span class=\"ngq-info-value\">${lust}</span></div>`;\n      html += `<div class=\"ngq-info-row\"><span class=\"ngq-info-label\">入住天数</span><span class=\"ngq-info-value\">${days}天</span></div>`;\n      html += `<div class=\"ngq-info-row\"><span class=\"ngq-info-label\">租金</span><span class=\"ngq-info-value\">¥${rent} ${paid ? '✅已缴' : '⚠️未缴'}</span></div>`;\n      html += `<div class=\"ngq-actions\"><button class=\"ngq-btn\" data-action=\"favor-add\" data-name=\"${name}\">好感+5</button></div>`;\n      html += `</div>`;\n    });\n    return html;\n  }\n\n  function renderEvents(): string {\n    if (!lastData) return '<div class=\"ngq-empty\"><div class=\"ngq-empty-icon\">📭</div><div>暂无数据</div></div>';\n    const arr: any[] = (lastData?.事件历史 && Array.isArray(lastData.事件历史[0]) ? lastData.事件历史[0] : []) as any[];\n    const items = arr.filter(v => v !== '$__META_EXTENSIBLE__$');\n    if (items.length === 0)\n      return '<div class=\"ngq-empty\"><div class=\"ngq-empty-icon\">📜</div><div>暂无事件记录</div></div>';\n\n    let html = `<div class=\"ngq-card\"><div class=\"ngq-card-title\"><span>📜</span><span>事件历史 (${items.length})</span></div><div class=\"ngq-card-body\">`;\n    items\n      .slice(-30)\n      .reverse()\n      .forEach(ev => {\n        html += `<div class=\"ngq-info-row\" style=\"display:block;line-height:1.6\">📌 ${ev}</div>`;\n      });\n    html += `</div></div>`;\n    return html;\n  }\n\n  function renderActions(): string {\n    let html = `<div class=\"ngq-card\"><div class=\"ngq-card-title\"><span>⚙️</span><span>公寓操作</span></div><div class=\"ngq-card-body\">`;\n    html += `<div class=\"ngq-actions\"><button class=\"ngq-btn\" data-action=\"refresh\">🔄 刷新数据</button><button class=\"ngq-btn\" data-action=\"auto-refresh\" id=\"auto-refresh-btn\">⏱️ 自动刷新: 关</button></div>`;\n    html += `</div></div>`;\n\n    // 成就\n    const achievements = lastData?.成就列表?.[0] || [];\n    const achItems = achievements.filter((v: any) => v !== '$__META_EXTENSIBLE__$');\n    html += `<div class=\"ngq-card\"><div class=\"ngq-card-title\"><span>🏆</span><span>成就 (${achItems.length})</span></div><div class=\"ngq-card-body\">`;\n    if (achItems.length === 0) {\n      html += `<div class=\"ngq-empty\" style=\"padding:20px\"><div class=\"ngq-empty-icon\" style=\"font-size:32px\">🏆</div><div>暂无成就</div></div>`;\n    } else {\n      achItems.forEach((ach: any) => {\n        html += `<div class=\"ngq-info-row\" style=\"display:block;line-height:1.6\">🏆 ${ach}</div>`;\n      });\n    }\n    html += `</div></div>`;\n    return html;\n  }\n\n  let autoRefreshTimer: number | null = null;\n  let isProcessing = false; // 防止重复点击\n\n  function initTabEvents() {\n    // 使用事件委托，只绑定一次\n    const content = targetDoc.getElementById('ngq-content');\n    if (!content) return;\n\n    // 移除旧的事件监听器（如果存在）\n    const oldHandler = (content as any).__ngqClickHandler;\n    if (oldHandler) {\n      content.removeEventListener('click', oldHandler);\n    }\n\n    // 创建新的事件处理器\n    const clickHandler = (e: Event) => {\n      const t = e.target as HTMLElement;\n      if (!t.matches('button[data-action]')) return;\n\n      // 防止重复点击\n      if (isProcessing) {\n        e.preventDefault();\n        e.stopPropagation();\n        return;\n      }\n\n      const action = t.getAttribute('data-action');\n      const name = t.getAttribute('data-name');\n\n      if (action === 'favor-add' && name) {\n        e.preventDefault();\n        e.stopPropagation();\n        fillCommand(`_.add('租客列表[0].${name}.好感度[0]', 5); // 交互友好，略微提升好感`);\n      } else if (action === 'recruit') {\n        e.preventDefault();\n        e.stopPropagation();\n        isProcessing = true;\n\n        // 使用 setTimeout 延迟执行 prompt，避免阻塞\n        setTimeout(() => {\n          try {\n            const keywords = prompt('请输入希望招募的租客特征（例如：温柔、文静、大学生）', '温柔、文静、大学生');\n            if (keywords) fillCommand(`招募一名符合以下特征的租客：${keywords}`);\n          } finally {\n            isProcessing = false;\n          }\n        }, 100);\n      } else if (action === 'refresh') {\n        e.preventDefault();\n        e.stopPropagation();\n        void refresh();\n      } else if (action === 'auto-refresh') {\n        e.preventDefault();\n        e.stopPropagation();\n        if (autoRefreshTimer) {\n          clearInterval(autoRefreshTimer);\n          autoRefreshTimer = null;\n          t.textContent = '⏱️ 自动刷新: 关';\n        } else {\n          autoRefreshTimer = window.setInterval(() => void refresh(), 4000);\n          t.textContent = '⏱️ 自动刷新: 开';\n        }\n      }\n    };\n\n    // 保存处理器引用，用于后续移除\n    (content as any).__ngqClickHandler = clickHandler;\n\n    // 绑定事件\n    content.addEventListener('click', clickHandler);\n  }\n\n  function fillCommand(cmd: string) {\n    try {\n      const input = (parent?.document || targetDoc).querySelector<HTMLTextAreaElement>('#send_textarea');\n      if (input) {\n        input.value = input.value ? input.value + '\\n' + cmd : cmd;\n        input.focus();\n      } else {\n        alert(cmd);\n      }\n    } catch {\n      alert(cmd);\n    }\n  }\n\n  void refresh();\n  return { refresh };\n}\n\nfunction unmountUI(targetDoc: Document): void {\n  const root = targetDoc.getElementById('ngq-floating-root');\n  if (root) root.remove();\n  const style = targetDoc.getElementById('ngq-floating-styles');\n  if (style) style.remove();\n}\n\n$(() => {\n  const targetDoc = getTargetDoc();\n  mountUI(targetDoc);\n});\n\n(() => {\n  const targetDoc = getTargetDoc();\n  $(targetDoc).on('pagehide.ngq-floating', () => {\n    unmountUI(targetDoc);\n  });\n})();\n"],"names":["safeGetValue","obj","path","defaultValue","keys","split","current","key","Array","isArray","Object","prototype","hasOwnProperty","call","length","String","async","loadMvuData","waitGlobalInitialized","Promise","resolve","timer","setInterval","Mvu","clearInterval","waitForMvu","res","getMvuData","type","message_id","stat_data","getTargetDoc","window","top","document","mountUI","targetDoc","id","getElementById","style","createElement","textContent","head","appendChild","ensureStyles","existing","remove","root","body","btn","className","title","panel","innerHTML","dragData","moved","STORAGE_KEY","saved","localStorage","getItem","pos","JSON","parse","left","right","bottom","handleStart","clientX","clientY","rect","getBoundingClientRect","computed","defaultView","getComputedStyle","startX","startY","initialLeft","initialTop","classList","add","handleMove","deltaX","deltaY","Math","abs","newLeft","newTop","handleEnd","setItem","stringify","addEventListener","e","preventDefault","t","touches","passive","stopPropagation","toggle","onclick","handle","pDrag","startPanelDrag","x","y","transform","movePanelDrag","nx","ny","endPanelDrag","lastData","currentTab","refresh","data","subtitle","date","trim","time","location","floors","filter","k","tenants","tenantMap","countTenants","undefined","events","v","setBadge","val","el","updateHeaderInfo","renderCurrentTab","content","html","cfg","rooms","map","order","parseFloat","name","capacity","sort","a","b","forEach","floor","floorRooms","roomKeys","roomKey","r","layout","tenant","push","localeCompare","room","cls","tenantDisplay","roomIcon","renderSingleFloor","renderFloors","names","favor","lust","age","job","place","status","mood","appearance","personality","love","rent","days","paid","renderTenants","items","slice","reverse","ev","renderEvents","achItems","ach","renderActions","oldHandler","__ngqClickHandler","removeEventListener","clickHandler","target","matches","isProcessing","action","getAttribute","fillCommand","setTimeout","keywords","prompt","autoRefreshTimer","initTabEvents","tabs","from","querySelectorAll","tab","which","cmd","input","parent","querySelector","value","focus","alert","$","on","unmountUI"],"sourceRoot":""}